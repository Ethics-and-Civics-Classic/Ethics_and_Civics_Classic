###################
# Specialist Jobs
###################

bath_attendant = {
	category = specialist

	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_toxic_bath
			# clothes_texture_index = 3
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		has_ethic = ethic_industrial
		owner = {
			is_gestalt = no
		}
	}

	triggered_planet_modifier = {
		founder_species_growth_mult = 0.015
		pop_environment_tolerance = -0.0025
		pop_happiness = -0.0075
		mult = planet.value:toxic_attendant_growth
	}
	triggered_planet_modifier = {
		potential = { 
			exists = owner
			owner = { is_gestalt = no } 
		}
		pop_ethic_industrial_attraction_mult = 0.01
		pop_ethic_green_attraction_mult = -0.01
	}


	resources = {
		category = planet_bath_attendants
		upkeep = {
			consumer_goods = 1
		}
		produces = {
			trigger = {
				exists = planet
				planet = {
					OR = {
						has_councilor = { COUNCILOR = councilor_toxic_baths }
						has_councilor = { COUNCILOR = councilor_corporate_toxic_baths }
					}
				}
			}

			unity = @councilor_toxic_baths_attendant_unity
			mult = value:councilor_level_combo|COUNCILOR_1|councilor_toxic_baths|COUNCILOR_2|councilor_corporate_toxic_baths|
		}
	}
	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|artificer|RESOURCE1|consumer_goods|WEIGHT1|0.8|RESOURCE2|engineering_research|WEIGHT2|0.2|
		# mult = value:scripted_modifier_job_weight_mult|MODIFIER|trader_jobs_bonus_workforce_mult|	# No Longer Used in Stellaris 4.0
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}
		# modifier = {	# No Longer Used in Stellaris 4.0
		#	factor = 5
		#	# has_job_type = bath_attendant	# No Longer Used in Stellaris 4.0
		#}
		modifier = {
			factor = 25
			owner = { is_individual_machine = no }
		}
	}

	inline_script = "jobs/automodding_priority_trade"
}

bath_attendant_individual_machine = {
	category = specialist

	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_toxic_bath
			# clothes_texture_index = 3
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	triggered_planet_modifier = {
		planet_pop_assembly_mult = 0.015
		#pop_ethic_industrial_attraction_mult = 0.01
		pop_amenities_usage_mult = 0.01
		#pop_ethic_green_attraction_mult = -0.01
		mult = planet.value:toxic_attendant_growth
	}


	resources = {
		category = planet_bath_attendants_individual_machine
		upkeep = {
			consumer_goods = 1
		}
		produces = {
			trigger = {
				exists = planet
				planet = {
					OR = {
						has_councilor = { COUNCILOR = councilor_toxic_baths_individual_machine }
						has_councilor = { COUNCILOR = councilor_corporate_toxic_baths_individual_machine }
					}
				}
			}

			unity = @councilor_toxic_baths_attendant_unity
			mult = value:councilor_level_combo|COUNCILOR_1|councilor_toxic_baths_individual_machine|COUNCILOR_2|councilor_corporate_toxic_baths_individual_machine|
		}
	}
	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|artificer|RESOURCE1|consumer_goods|WEIGHT1|0.8|RESOURCE2|engineering_research|WEIGHT2|0.2|
		# mult = value:scripted_modifier_job_weight_mult|MODIFIER|trader_jobs_bonus_workforce_mult|	# No Longer Used in Stellaris 4.0
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}
		# modifier = {	# No Longer Used in Stellaris 4.0
		#	factor = 5
		#	# has_job_type = bath_attendant
		#}
	}

	inline_script = "jobs/automodding_priority_trade"
}

researcher = {
	category = specialist

	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_research_lab_1
			# clothes_texture_index = 3
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 3
			engineering_research = 3
			society_research = 3
		}
		produces = {
			trigger = {
				exists = owner										# Modded
				owner = {
					OR = {
						has_valid_civic = civic_technocracy			# Modded
						has_valid_civic = civic_cyber_dictatorship	# Modded
						has_valid_civic = civic_science_directorate	# Modded
						has_valid_civic = civic_cyber_demos_cratos	# Modded
					}
				}
			}
			unity = 1												# Modded
		}
		upkeep = {
			consumer_goods = 2
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			consumer_goods = 1
		}
		upkeep = {
			trigger = {
				exists = owner										# Modded
				owner = {
					OR = {
						has_valid_civic = civic_technocracy			# Modded
						has_valid_civic = civic_cyber_dictatorship	# Modded
						has_valid_civic = civic_science_directorate	# Modded
						has_valid_civic = civic_cyber_demos_cratos	# Modded
					}
				}
			}
			consumer_goods = 1										# Modded
		}
		upkeep = {
			trigger = {
				exists = owner										# Modded
				owner = {
					has_edict = research_subsidies					# Modded
				}
			}
			energy = 1												# Modded
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			physics_research = 1
			engineering_research = 1
			society_research = 1
		}
	}

	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		exists = owner													# Modded
	#		owner = {
	#			OR = {
	#				has_valid_civic = civic_industrial_automatation 			# Modded
	#				has_valid_civic = civic_industrial_automatation_corporate	# Modded
	#			}
	#		}
	#	}
	#	planet_jobs_trade_produces_add = 3													# Modded
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|	# Modded
	#}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_research_modifier|JOB|researcher|
		modifier = {
			factor = 0.2
			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		# modifier = {
		#	factor = 1.5
		#	has_job_type = researcher	# No Longer Used in Stellaris 4.0
		#}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 5
			has_trait = trait_cyborg_creed_of_research
		}
	}

	inline_script = "jobs/automodding_priority_research"
}

physicist = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_research_lab_1
		}
		# Astrometeorologists
		swap_type = {
			trigger = {
				physicist_is_astrometeorologist_trigger = yes
			}
			name = astrometeorologist
			desc = astrometeorologist
			icon = astrometeorologist
			building_icon = building_astrometeorology_observation_center
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 5
		}
		# Astral Researcher
		swap_type = {
			trigger = {
				physicist_is_astral_researcher_trigger = yes
			}
			name = astral_researcher
			desc = astral_researcher
			icon = astral_researcher
			building_icon = building_astral_siphon_1
			weight = 5
		}
		# Space-Time Anomaly Researcher
		swap_type = {
			trigger = {
				physicist_is_space_time_researcher_trigger = yes
			}
			name = space_time_anomaly_researcher
			desc = space_time_anomaly_researcher
			weight = 10
		}
		# Dimension Portal Researcher
		swap_type = {
			trigger = {
				physicist_is_dimensional_portal_researcher_trigger = yes
			}
			name = dimensional_portal_researcher
			desc = dimensional_portal_researcher
			weight = 15
		}
		# Astral-Metrorologists
		swap_type = {
			trigger = {
				physicist_is_astral_researcher_trigger = yes
				physicist_is_astrometeorologist_trigger = yes
			}
			name = astral_meteorologist
			desc = astral_meteorologist
			icon = astrometeorologist
			building_icon = building_astral_siphon_1
			weight = 20
		}
	}

	tags = { research }

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
		if = {												# Enriad - disable it if you dont want Strong Spiritualist Restriction for Priest jobs
			limit = { 
				planet = {
					physicist_is_astrometeorologist_trigger = yes
				}
			}
			OR = {
				has_ethic = ethic_green
				has_ethic = ethic_fanatic_green
				has_ethic = ethic_industrial
				has_ethic = ethic_fanatic_industrial
				owner = { is_individual_machine = yes }		# Cog Note - This is the fix/bypass for individualist machines
				owner = { is_gestalt = yes }
			}
		}
	}

	triggered_country_modifier = {
		potential = {
			local_or_sector_governor_has_trait = {
				TRAIT = leader_trait_academia_recruiter
			}
		}
		country_naval_cap_add = 1
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	resources = {
		category = planet_physicists
		produces = {
			physics_research = 6
		}
		# Astrometrorologists
		produces = {
			trigger = {
				exists = planet
				planet = {
					physicist_is_astrometeorologist_trigger = yes
					solar_system = {
						OR = {
							has_environmental_effects = yes
							has_star_flag = storm_system
						}
					}
				}
			}
			physics_research = 4
		}
		upkeep = {
			consumer_goods = 1.5
		}
		produces = {
			trigger = {
				exists = owner										# Modded
				owner = {
					OR = {
						has_valid_civic = civic_technocracy			# Modded
						has_valid_civic = civic_cyber_dictatorship	# Modded
						has_valid_civic = civic_science_directorate	# Modded
						has_valid_civic = civic_cyber_demos_cratos	# Modded
					}
				}
			}
			unity = 1												# Modded
		}
		# Space-Time Researcher
		produces = {
			trigger = {
				physicist_is_space_time_researcher_trigger = yes
			}
			physics_research = 2
			sr_dark_matter = 0.2
		}
		upkeep = {
			trigger = {
				physicist_is_space_time_researcher_trigger = yes
			}
			consumer_goods = 1.5
		}
		inline_script = "output/researcher_output"
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			physics_research = 1.5
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
					physicist_is_astrometeorologist_trigger = yes
					solar_system = {
						OR = {
							has_environmental_effects = yes
							has_star_flag = storm_system
						}
					}
				}
			}
			physics_research = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			physicist_is_astrometeorologist_trigger = yes
			OWNER = { is_green = yes }
			owner = { is_gestalt = no }
		}
		pop_ethic_green_attraction_mult = 0.05
	}
	triggered_planet_modifier = {
		potential = {
			physicist_is_astrometeorologist_trigger = yes
			solar_system = {
				OR = {
					has_environmental_effects = yes
					has_star_flag = storm_system
				}
			}
			OWNER = { is_green = yes }
			owner = { is_gestalt = no }
		}
		pop_ethic_green_attraction_mult = 0.05
	}
	
	triggered_planet_modifier = {
		potential = {
			physicist_is_astrometeorologist_trigger = yes
			OWNER = { is_industrial = yes }
			owner = { is_gestalt = no }
		}
		pop_ethic_industrial_attraction_mult = 0.05
	}
	triggered_planet_modifier = {
		potential = {
			physicist_is_astrometeorologist_trigger = yes
			solar_system = {
				OR = {
					has_environmental_effects = yes
					has_star_flag = storm_system
				}
			}
			OWNER = { is_industrial = yes }
			owner = { is_gestalt = no }
		}
		pop_ethic_industrial_attraction_mult = 0.05
	}

	# Dimensional Portal Amenities
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_normal
			}
		}
		planet_amenities_add = 600
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_high
			}
		}
		planet_amenities_add = 1200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_low
			}
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_crisis
			}
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|physicist|RESOURCE|physics_research|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 5
			has_trait = trait_cyborg_creed_of_research
		}
		modifier = {
			factor = 300						# Enriad - so it definitely will be filled bc Strong green and industrial restriction
			planet = {
				physicist_is_astrometeorologist_trigger = yes
			}
		}
	}

	inline_script = "jobs/automodding_priority_research"

	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

biologist = {
	category = specialist

	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_research_lab_1
		}
		# Rangers
		swap_type = {
			trigger = {
				biologist_is_ranger_trigger = yes
			}
			name = ranger
			desc = ranger
			icon = ranger
			building_icon = holding_park_ranger_lodge
			weight = 5
		}
		# Vent Reseachers
		swap_type = {
			trigger = {
				biologist_is_vent_researcher_trigger = yes
			}
			name = stratovent_researcher
			desc = stratovent_researcher
			icon = xeno_zoo_keeper
			building_icon = building_nanolab_1
			weight = 10
		}
		# Zookeepers
		swap_type = {
			trigger = {
				biologist_is_zookeeper_trigger = yes
			}
			name = xeno_zoo_keeper
			desc = xeno_zoo_keeper
			icon = xeno_zoo_keeper
			building_icon = building_xeno_zoo
			weight = 15
		}
		# Archaeo-Engineers
		swap_type = {
			trigger = {
				biologist_is_archaeo_engineer_trigger = yes
			}
			name = archaeoengineers
			desc = archaeoengineers
			icon = archaeoengineers
			building_icon = building_archaeostudies_faculty
			weight = 20
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	triggered_country_modifier = {
		potential = {
			local_or_sector_governor_has_trait = {
				TRAIT = leader_trait_academia_recruiter
			}
		}
		country_naval_cap_add = 1
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	resources = {
		category = planet_biologists
		produces = {
			society_research = 6
		}
		produces = {
			trigger = {
				biologist_is_zookeeper_trigger = yes
			}
			society_research = 1
		}
		upkeep = {
			trigger = {
				biologist_is_zookeeper_trigger = yes
			}
			consumer_goods = 0.5
		}
		upkeep = {
			consumer_goods = 1.5
		}
		inline_script = "output/researcher_output"
		produces = {
			trigger = {
				exists = owner										# Modded
				owner = {
					OR = {
						has_valid_civic = civic_technocracy			# Modded
						has_valid_civic = civic_cyber_dictatorship	# Modded
						has_valid_civic = civic_science_directorate	# Modded
						has_valid_civic = civic_cyber_demos_cratos	# Modded
					}
				}
			}
			unity = 1												# Modded
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			society_research = 1.5
		}
	}

	# Job Swap - Rangers
	triggered_planet_modifier = {
		potential = {
			biologist_is_ranger_trigger = yes
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	# Job Swap - Vent Researchers
	triggered_planet_modifier = {
		potential = {
			biologist_is_vent_researcher_trigger = yes
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	# Job Swap - Zookeepers
	triggered_planet_modifier = {
		potential = {
			biologist_is_zookeeper_trigger = yes
		}
		planet_amenities_add = 100
		mult = value:zoo_keeper_amenity_output
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|biologist|RESOURCE|society_research|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 5
			has_trait = trait_cyborg_creed_of_research
		}
	}

	inline_script = "jobs/automodding_priority_research"

	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

engineer = {
	category = specialist

	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_research_lab_1
		}
		# Dismantler
		swap_type = {
			trigger = {
				engineer_is_manufactorium_scraper_trigger = yes
			}
			name = manufactorium_scraper
			desc = manufactorium_scraper
			icon = broken_shackles_scavenger
			building_icon = building_research_lab_1
			weight = 5
		}
		# Munitions Decommissioner
		swap_type = {
			trigger = {
				engineer_is_munitions_decommissioner_trigger = yes
			}
			name = munitions_decommissioner
			desc = munitions_decommissioner
			icon = munitions_decommissioner
			building_icon = building_research_lab_1
			weight = 10
		}
		# Nanotech Researcher
		swap_type = {
			trigger = {
				engineer_is_nanotech_researcher_trigger = yes
			}
			name = nanotech_researcher
			desc = nanotech_researcher
			building_icon = building_nanolab_1
			weight = 15
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	triggered_country_modifier = {
		potential = {
			local_or_sector_governor_has_trait = {
				TRAIT = leader_trait_academia_recruiter
			}
		}
		country_naval_cap_add = 1
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	resources = {
		category = planet_engineers
		produces = {
			engineering_research = 6
		}
		produces = {
			trigger = {
				engineer_is_nanotech_researcher_trigger = yes
			}
			engineering_research = 2
		}
		upkeep = {
			consumer_goods = 1.5
		}
		inline_script = "output/researcher_output"
		produces = {
			trigger = {
				exists = owner										# Modded
				owner = {
					OR = {
						has_valid_civic = civic_technocracy			# Modded
						has_valid_civic = civic_cyber_dictatorship	# Modded
						has_valid_civic = civic_science_directorate	# Modded
						has_valid_civic = civic_cyber_demos_cratos	# Modded
					}
				}
			}
			unity = 1												# Modded
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			engineering_research = 1
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|engineer|RESOURCE|engineering_research|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 5
			has_trait = trait_cyborg_creed_of_research
		}
	}

	inline_script = "jobs/automodding_priority_research"

	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

# priest = {					# Enriad - Marked for delition for priests fix
# 	category = specialist

# 	swappable_data = {
# 		default = {
# 			condition_string = SPECIALIST_JOB_TRIGGER
# 			building_icon = building_temple
# 			# clothes_texture_index = 3
# 		}
# 	}

# 	possible_pre_triggers = {
# 		has_owner = yes
# 		is_being_purged = no
# 		is_being_assimilated = no
# 		is_sapient = yes
# 	}

# 	possible_precalc = can_fill_specialist_job
# 	possible = {
# 		complex_specialist_job_check_trigger = yes
# 		OR = {
# 			has_ethic = ethic_spiritualist
# 			owner = { is_individual_machine = yes }
#			owner = { is_gestalt = yes }
# 		}
# 	}

# 	resources = {
# 		category = planet_bureaucrats
# 		produces = {
# 			unity = 4
# 		}
# 		produces = {
# 			trigger = {
# 				exists = owner													# Modded
# 				owner = {
# 					OR = {
# 						has_valid_civic = civic_exalted_priesthood				# Modded
# 						has_valid_civic = civic_imperial_cult					# Modded
# 						has_valid_civic = civic_divine_council					# Modded
# 						has_valid_civic = civic_spiritual_democracy				# Modded
# 					}
# 				}
# 			}
# 			unity = 1															# Modded
# 		}
# 		upkeep = {
# 			consumer_goods = 2
# 		}
# 	}

# 	planet_modifier = {
# 		pop_ethic_spiritualist_attraction_mult = 0.05
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			always = yes
# 		}
# 		planet_amenities_add = 200
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			planet = {
# 				has_active_building = building_league_offices
# 			}
# 		}
# 		planet_amenities_add = 100
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
# 	}

# 	triggered_country_modifier = {
# 		potential = {
# 			exists = owner
# 			owner = { has_valid_civic = civic_efficient_bureaucracy }
# 		}
# 		country_edict_fund_add = 2
# 		mult = value:job_total_output_modifier|JOB|priest|RESOURCE|unity|
# 	}

# 	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
# 	#	potential = {
# 	#		exists = owner
# 	#		owner = { has_councilor = { COUNCILOR = "councilor_dimensional_worship_corporate" } }
# 	#	}
# 	#	planet_jobs_trade_produces_add = @councilor_dimensional_worship_priest_trade_value
# 	#	mult = value:scripted_modifier_councilor_level_mult|MODIFIER|trader_jobs_bonus_workforce_mult|TYPE|councilor_dimensional_worship_corporate|
# 	#}

# 	triggered_planet_modifier = {
# 		potential = {
# 			planet = {
# 				exists = owner
# 				owner = {
# 					has_tradition = tr_modularity_4
# 				}
# 			}
# 		}
# 		planet_jobs_worker_produces_mult = 0.02
# 	}

# 	weight = {
# 		weight = @specialist_job_weight
# 		mult = value:job_weights_modifier|JOB|priest|RESOURCE|unity|
# 		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
# 		modifier = {
# 			factor = 0.2
# 			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
# 		}
# 		modifier = {
# 			factor = 2
# 			exists = owner
# 			owner = { has_civic = civic_exalted_priesthood }
# 		}
# 		modifier = {
# 			factor = 0.1
# 			can_take_servant_job = yes
# 		}
# 		# modifier = {
# 		#	factor = 1.5
# 		#	has_job_type = priest	# No Longer Used in Stellaris 4.0
# 		#}
# 		modifier = {
# 			factor = 0.1
# 			is_enslaved = yes
# 			has_slavery_type = { type = slavery_indentured }
# 		}
# 		modifier = {
# 			factor = 25
# 			owner = { is_individual_machine = no }
# 		}
# 	}

# 	inline_script = "jobs/automodding_priority_unity"
# }

# preacher = {					# Enriad - Marked for delition for priests fix
# 	category = specialist

# 	swappable_data = {
# 		default = {
# 			condition_string = SPECIALIST_JOB_TRIGGER
# 			building_icon = building_temple_of_prosperity
# 			# clothes_texture_index = 3
# 			icon = numistic_priest
# 		}
# 	}

# 	possible = {
# 		always = no
# 	}

# 	possible_pre_triggers = {
# 		has_owner = yes
# 		is_being_purged = no
# 		is_being_assimilated = no
# 		is_sapient = yes
# 	}

# 	possible_precalc = can_fill_specialist_job
# 	possible = {
# 		complex_specialist_job_check_trigger = yes
# 		OR = {
# 			has_ethic = ethic_spiritualist
# 			has_ethic = ethic_capitalism
# 			owner = { is_individual_machine = yes }
# 		}
# 	}

# 	resources = {
# 		category = planet_bureaucrats
# 		produces = {
# 			unity = 3
# 		}
# 		upkeep = {
# 			consumer_goods = 2
# 		}
# 	}

# 	planet_modifier = {
# 		pop_ethic_spiritualist_attraction_mult = 0.10
# 		pop_ethic_capitalism_attraction_mult = 0.10
# 	}

# 	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
# 	#	potential = {
# 	#		always = yes
# 	#	}
# 	#	# Actual trade value determined in the script value below
# 	#	planet_jobs_trade_produces_add = 1
# 	#	mult = value:preacher_trade_value
# 	#}

# 	triggered_planet_modifier = {
# 		potential = {
# 			always = yes
# 		}
# 		planet_amenities_add = 200
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			planet = {
# 				has_active_building = building_league_offices
# 			}
# 		}
# 		planet_amenities_add = 100
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
# 	}

# 	triggered_country_modifier = {
# 		potential = {
# 			exists = owner
# 			owner = { has_valid_civic = civic_efficient_bureaucracy }
# 		}
# 		country_edict_fund_add = 2
# 		mult = value:job_total_output_modifier|JOB|preacher|RESOURCE|unity|
# 	}

# 	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
# 	#	potential = {
# 	#		exists = owner
# 	#		owner = { has_councilor = { COUNCILOR = "councilor_dimensional_worship_corporate" } }
# 	#	}
# 	#	planet_jobs_trade_produces_add = @councilor_dimensional_worship_priest_trade_value
# 	#	mult = value:scripted_modifier_councilor_level_mult|MODIFIER|trader_jobs_bonus_workforce_mult|TYPE|councilor_dimensional_worship_corporate|
# 	#}

# 	triggered_planet_modifier = {
# 		potential = {
# 			planet = {
# 				exists = owner
# 				owner = {
# 					has_tradition = tr_modularity_4
# 				}
# 			}
# 		}
# 		planet_jobs_worker_produces_mult = 0.02
# 	}

# 	weight = {
# 		weight = @specialist_job_weight
# 		mult = value:job_weights_modifier|JOB|preacher|RESOURCE|unity|
# 		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
# 		# mult = value:scripted_modifier_job_weight_mult|MODIFIER|trader_jobs_bonus_workforce_mult|	# No Longer Used in Stellaris 4.0
# 		modifier = {
# 			factor = 0.2
# 			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
# 		}
# 		modifier = {
# 			factor = 2
# 			exists = owner
# 			owner = { has_civic = civic_exalted_priesthood }
# 		}
# 		modifier = {
# 			factor = 0.1
# 			can_take_servant_job = yes
# 		}
# 		# modifier = {
# 		#	factor = 1.5
# 		#	has_job_type = preacher	# No Longer Used in Stellaris 4.0
# 		#}
# 		modifier = {
# 			factor = 0.1
# 			is_enslaved = yes
# 			has_slavery_type = { type = slavery_indentured }
# 		}
# 		modifier = {
# 			factor = 25
# 			owner = { is_individual_machine = no }
# 		}
# 	}

# 	inline_script = "jobs/automodding_priority_unity"
# }

# death_priest = {					# Enriad - Marked for delition for priests fix
# 	category = specialist
# 	swappable_data = {
# 		default = {
# 			condition_string = SPECIALIST_JOB_TRIGGER
# 			building_icon = building_sacrificial_temple_1
# 			# clothes_texture_index = 3
# 			icon = death_priest
# 		}
# 	}

# 	possible_pre_triggers = {
# 		has_owner = yes
# 		is_sapient = yes
# 		is_being_purged = no
# 		is_being_assimilated = no
# 	}

# 	possible_precalc = can_fill_specialist_job
# 	possible = { complex_specialist_job_check_trigger = yes }

# 	resources = {
# 		category = planet_bureaucrats
# 		produces = {
# 			unity = 3
# 			society_research = 1
# 		}
# 		produces = {
# 			trigger = {
# 				exists = owner
# 				owner = { has_sacrificial_edict = yes }
# 			}
# 			unity = 3
# 		}
# 		produces = {
# 			trigger = {
# 				exists = owner											# Modded
# 				owner = { has_valid_civic = civic_exalted_priesthood }	# Modded
# 			}
# 			unity = 1													# Modded
# 		}
# 		upkeep = {
# 			consumer_goods = 2
# 		}
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			always = yes
# 		}
# 		planet_amenities_add = 200
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			planet = {
# 				has_active_building = building_league_offices
# 			}
# 		}
# 		planet_amenities_add = 100
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
# 	}

# 	triggered_country_modifier = {
# 		potential = {
# 			exists = owner
# 			owner = { has_valid_civic = civic_efficient_bureaucracy }
# 		}
# 		country_edict_fund_add = 2
# 		mult = value:job_total_output_modifier|JOB|death_priest|RESOURCE|unity|
# 	}

# 	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
# 	#	potential = {
# 	#		exists = owner
# 	#		owner = { has_councilor = { COUNCILOR = "councilor_dimensional_worship_corporate" } }
# 	#	}
# 	#	planet_jobs_trade_produces_add = @councilor_dimensional_worship_priest_trade_value
# 	#	mult = value:scripted_modifier_councilor_level_mult|MODIFIER|trader_jobs_bonus_workforce_mult|TYPE|councilor_dimensional_worship_corporate|
# 	#}

# 	triggered_planet_modifier = {
# 		potential = {
# 			planet = {
# 				exists = owner
# 				owner = {
# 					has_tradition = tr_modularity_4
# 				}
# 			}
# 		}
# 		planet_jobs_worker_produces_mult = 0.02
# 	}

# 	weight = {
# 		weight = @specialist_job_weight
# 		mult = value:job_weights_multiple_resources_modifier|JOB|death_priest|RESOURCE1|unity|WEIGHT1|0.75|RESOURCE2|society_research|WEIGHT2|0.25|
# 		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
# 		modifier = {
# 			factor = 0.2
# 			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
# 		}
# 		modifier = {
# 			factor = 2
# 			exists = owner
# 			owner = { has_civic = civic_exalted_priesthood }
# 		}
# 		modifier = {
# 			factor = 0.1
# 			can_take_servant_job = yes
# 		}
# 		# modifier = {
# 		#	factor = 1.5
# 		#	has_job_type = death_priest	# No Longer Used in Stellaris 4.0
# 		#}
# 		modifier = {
# 			factor = 0.1
# 			is_enslaved = yes
# 			has_slavery_type = { type = slavery_indentured }
# 		}
# 	}

# 	inline_script = "jobs/automodding_priority_unity"
# }

enforcer = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = BATTLE_THRALL_JOB_TRIGGER
			building_icon = building_precinct_house
			# clothes_texture_index = 5
		}
		swap_type = {
			trigger = {
				enforcer_is_educator_trigger = yes
			}
			name = educator
			desc = educator
			icon = educator
			building_icon = building_state_academy
			condition_string = BATTLE_THRALL_JOB_TRIGGER
			weight = 10
		}
		swap_type = {
			trigger = {
				OWNER = { has_edict = negotiate_with_crime_lords_edict }
			}
			icon = pirate_lord_enforcer
			building_icon = building_precinct_house
			condition_string = BATTLE_THRALL_JOB_TRIGGER
			weight = 15
		}
		swap_type = {
			trigger = {
				enforcer_is_educator_trigger = no
				OWNER = { has_civic = civic_military_dictatorship_corporate }
			}
			name = pirate_lord_enforcer
			desc = pirate_lord_enforcer
			icon = pirate_lord_enforcer
			building_icon = building_precinct_house
			condition_string = BATTLE_THRALL_JOB_TRIGGER
			weight = 20
		}
		swap_type = {
			trigger = {
				enforcer_is_educator_trigger = no
				OWNER = { has_civic = civic_criminal_heritage }
			}
			name = mob_boss_enforcer
			desc = mob_boss_enforcer
			icon = mob_boss_enforcer
			building_icon = building_precinct_house
			condition_string = BATTLE_THRALL_JOB_TRIGGER
			weight = 20
		}
	}

	tags = { crime enforcer }
	
	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = {
		battle_thrall_job_check_trigger = yes
	}

	resources = {
		category = planet_enforcers
		inline_script = "jobs/job_enforcer_triggered_resources"
		produces = {
			trigger = {
				exists = owner										# Modded
				owner = { has_valid_civic = civic_police_state }	# Modded
			}
			unity = 1												# Modded
		}
		produces = {
			trigger = {
				exists = planet
				OWNER = { 
					OR = {
						has_civic = civic_military_dictatorship_corporate 
						has_civic = civic_criminal_heritage
					}
				}
			}
			unity = 1
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = { has_modifier = anticrime_campaign }
			}
			energy = 2
		}
		upkeep = {
			trigger = {
				exists = planet
				OWNER = { 
					OR = {
						has_civic = civic_military_dictatorship_corporate 
						has_civic = civic_criminal_heritage
					}
				}
			}
			trade = 0.5
		}
	}

	# pop_group_modifier = {	# No Longer Used in Stellaris 4.0
	# 	pop_defense_armies_add = 2
	#}

	triggered_planet_modifier = {
		potential = {
			enforcer_is_educator_trigger = no
			OWNER = { NOT = { has_edict = negotiate_with_crime_lords_edict } }
		}
		planet_crime_add = -25
	}
	
	triggered_planet_modifier = {
		potential = {
			enforcer_is_educator_trigger = yes
			OWNER = { NOT = { has_edict = negotiate_with_crime_lords_edict } }
		}
		planet_crime_add = -20
	}
	
	triggered_planet_modifier = {
		potential = {
			enforcer_is_educator_trigger = no
		}
		planet_defense_armies_add = 2
		planet_stability_add = 1
	}

	triggered_planet_modifier = {
		potential = {
			enforcer_is_educator_trigger = yes
		}
		planet_defense_armies_add = 1
		pop_government_ethic_attraction = 0.1
	}
	
	inline_script = "jobs/job_enforcer_additional_modifiers"

	triggered_planet_modifier = {	#Modded
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_police_state }
		}
		modifier = {
			planet_crime_add = -5
		}
	}

	# triggered_planet_modifier = {	#Modded		# Enriad - not working, not intended to work in 4.0
	# 	potential = {
	# 		prev = { has_trait = trait_cyborg_integrated_weaponry }	# Enriad - current scope is planet where modifier is applied, prev is pop with merchant job
	# 	}
	# 	modifier = {
	# 		planet_crime_add = -5
	# 	}
	# }

	# triggered_planet_modifier = {	#Modded		# Enriad - not working, not intended to work in 4.0
	# 	potential = {
	# 		prev = { has_trait = trait_robot_integrated_weaponry }	# Enriad - current scope is planet where modifier is applied, prev is pop with merchant job
	# 	}
	# 	modifier = {
	# 		planet_crime_no_happiness_add = -5
	# 	}
	# }

	weight = {
		weight = @specialist_job_weight

		modifier = {
			mult = value:job_weights_modifier|JOB|enforcer|RESOURCE|unity|FACTOR|0.25|
			owner = { has_active_tradition = tr_domination_judgment_corps }
		}
		modifier = {
			factor = 50
		}
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_trait = trait_resilient
		}
		modifier = {
			factor = 2
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 1.5
			has_trait = trait_strong
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			has_slavery_type = { type = slavery_military }
		}
		modifier = {
			factor = 0.50
			has_trait = trait_weak
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.1
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 2
			has_trait = trait_presapient_earthbound
		}
		modifier = {
			factor = 1.1
			has_trait = trait_limited_regeneration
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
	}
	
	# Description
	triggered_desc = {
		trigger = {
			exists = owner
			enforcer_is_educator_trigger = no
			OWNER = { has_civic = civic_military_dictatorship_corporate }
		}
		text = job_pirate_lord_enforcer_effect_desc
	}
	# Description
	triggered_desc = {
		trigger = {
			exists = owner
			enforcer_is_educator_trigger = no
			OWNER = { has_civic = civic_criminal_heritage }
		}
		text = job_mob_boss_enforcer_effect_desc
	}
	
	
	
	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

telepath = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_psi_corps
			# clothes_texture_index = 5
		}
		swap_type = {
			trigger = {
				enforcer_is_educator_trigger = yes
			}
			name = educator_telepath
			desc = educator_telepath
			icon = telepath
			building_icon = building_psi_corps
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 10
		}
	}
	tags = { crime enforcer unity telepath }

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		has_psionic_species_trait = yes
	}

	resources = {
		category = planet_telepaths
		inline_script = "jobs/job_enforcer_triggered_resources"
		produces = {
			unity = 9
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_active_tradition = tr_domination_judgment_corps }
			}
			unity = 1
		}

		produces = {
			trigger = {
				exists = owner
				owner = { has_country_flag = whisperers_covenant_confirmed }
			}
			physics_research = 3
			engineering_research = 3
			society_research = 3
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_country_flag = whisperers_covenant_rank_1 }
			}
			physics_research = 3
			engineering_research = 3
			society_research = 3
		}
		produces = {
			trigger = {
				exists = owner										# Modded
				owner = { has_valid_civic = civic_police_state }	# Modded
			}
			unity = 1												# Modded
		}
		upkeep = {
			energy = 1
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = { has_modifier = anticrime_campaign }
			}
			energy = 2
		}
	}
	
	inline_script = "jobs/job_enforcer_additional_modifiers"
	inline_script = "jobs/job_telepath_additional_modifiers"

	#planet_modifier = {
	#	planet_crime_add = -10
	#	# planet_psionic_jobs_produces_mult = 0.05	# No Longer Used in Stellaris 4.0
	#}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = instrument_covenant_confirmed }
		}
		planet_amenities_add = 700
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = instrument_covenant_rank_1 }
		}
		planet_amenities_add = 800
	}

	#triggered_planet_modifier = {
	#	potential = {
	#		exists = owner
	#		owner  = { has_tradition = tr_psionics_breach_shroud }
	#	}
	#	modifier = {
	#		# planet_psionic_jobs_produces_mult = 0.05	# No Longer Used in Stellaris 4.0
	#	}
	#}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_edict = thought_enforcement }
		}
		modifier = {
			planet_crime_add = -30
		}
	}

	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		has_councilor = { COUNCILOR = "councilor_psionic_sovereign" }
	#	}
	#	planet_psionic_jobs_produces_mult = 0.01
	#	mult = value:councilor_level|TYPE|councilor_psionic_sovereign|
	#}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = composer_covenant_confirmed }
		}
		modifier = {
			founder_species_growth_mult = 0.02
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = composer_covenant_rank_1 }
		}
		modifier = {
			founder_species_growth_mult = 0.03
		}
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = eater_covenant_confirmed }
		}
		country_naval_cap_add = 5
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = eater_covenant_rank_1 }
		}
		country_naval_cap_add = 7
	}

	weight = {
		weight = @specialist_job_weight
		mult = 2
		mult = value:job_weights_modifier|JOB|telepath|RESOURCE|unity|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
		}
		modifier = {
			factor = 2
			has_trait = trait_resilient
		}
		#modifier = {
		#	factor = 0.1
		#	can_take_servant_job = yes
		#}
		# modifier = {
		#	factor = 1.5
		#	has_job_type = telepath	# No Longer Used in Stellaris 4.0
		#}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

entertainer = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_holo_theatres
			# clothes_texture_index = 3
		}
		# Duelists
		swap_type = {
			trigger = {
				entertainer_is_duelist_trigger = yes
				entertainer_is_storm_dancer_trigger = no
			}
			name = duelist
			desc = duelist
			icon = duelist
			condition_string = BATTLE_THRALL_JOB_TRIGGER
			weight = 5
		}
		# Storm Duelists
		swap_type = {
			trigger = {
				entertainer_is_duelist_trigger = yes
				entertainer_is_storm_dancer_trigger = yes
			}
			name = storm_duelist
			desc = storm_duelist
			icon = duelist
			building_icon = building_storm_summoning_theater
			condition_string = BATTLE_THRALL_JOB_TRIGGER
			weight = 20
		}
	}
	
	tags = { amenities unity }

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = {
		if = {
			limit = {
				entertainer_is_duelist_trigger = yes
				entertainer_is_storm_dancer_trigger = yes
			}
			battle_thrall_job_check_trigger = yes
			OR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_spiritualist
				has_ethic = ethic_green
				has_ethic = ethic_industrial
				owner = { is_individual_machine = yes }
				owner = { is_gestalt = yes }
			}
		}
		else_if = {
			limit = {
				entertainer_is_duelist_trigger = yes
				entertainer_is_storm_dancer_trigger = no
			}
			battle_thrall_job_check_trigger = yes
			OR = {
				has_ethic = ethic_militarist
				owner = { is_individual_machine = yes }
				owner = { is_gestalt = yes }
			}
		}
		else = {
			entertainer_job_check_trigger = yes
		}
	}

	resources = {
		category = planet_entertainers
		produces = {
			unity = 1
		}
		upkeep = {
			trigger = {
				entertainer_is_duelist_trigger = no
			}
			consumer_goods = 1
		}
		# Job Swap - Duelist
		produces = {
			trigger = {
				entertainer_is_duelist_trigger = yes
				entertainer_is_storm_dancer_trigger = no
			}
			unity = 1
		}
		upkeep = {
			trigger = {
				entertainer_is_duelist_trigger = yes
				entertainer_is_storm_dancer_trigger = no
			}
			alloys = 0.5
		}
		# Job Swap - Storm Duelists
		produces = {
			trigger = {
				entertainer_is_storm_dancer_trigger = yes
				entertainer_is_duelist_trigger = yes
			}
			unity = 4
		}
		upkeep = {
			trigger = {
				entertainer_is_storm_dancer_trigger = yes
				entertainer_is_duelist_trigger = yes
			}
			alloys = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 1250
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	
	## Duelist
	triggered_planet_modifier = {
		potential = {
			entertainer_is_duelist_trigger = yes
			exists = owner
			owner = {
				has_councilor = { COUNCILOR = "councilor_warrior_culture" }
			}
		}
		planet_amenities_add = 100
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_amenities_mult|TYPE|councilor_warrior_culture|
	}
	triggered_planet_modifier = {
		potential = {
			entertainer_is_duelist_trigger = yes
			owner = { is_gestalt = no }
		}
		pop_ethic_militarist_attraction_mult = 0.05
	}
	triggered_planet_modifier = {
		potential = {
			entertainer_is_storm_dancer_trigger = yes
			OWNER = { is_green = yes }
			owner = { is_gestalt = no }
		}
		pop_ethic_green_attraction_mult = 0.05
	}
	triggered_planet_modifier = {
		potential = {
			entertainer_is_storm_dancer_trigger = yes
			OWNER = { is_industrial = yes }
			owner = { is_gestalt = no }
		}
		pop_ethic_industrial_attraction_mult = 0.05
	}
	triggered_planet_modifier = {
		potential = {
			entertainer_is_storm_dancer_trigger = yes
			OWNER = { is_spiritualist = yes }
			owner = { is_gestalt = no }
		}
		pop_ethic_spiritualist_attraction_mult = 0.05
	}
	triggered_country_modifier = {
		potential = {
			entertainer_is_duelist_trigger = yes
		}
		country_naval_cap_add = 2
	}

	triggered_country_modifier = {
		potential = {
			entertainer_is_duelist_trigger = yes
			has_councilor = { COUNCILOR = "councilor_warrior_culture" }
		}

		country_naval_cap_add = 0.2
		mult = value:councilor_level|TYPE|councilor_warrior_culture|
	}

	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		has_councilor = { COUNCILOR = "councilor_corporate_hedonism" }
	#	}
	#
	#	planet_jobs_trade_produces_add = @councilor_corporate_hedonism_entertainer_trade_value
	#	mult = value:scripted_modifier_councilor_level_mult|MODIFIER|trader_jobs_bonus_workforce_mult|TYPE|councilor_corporate_hedonism|
	#}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_pleasure_seeker_empire = yes
				is_individual_machine = no
			}
		}
		modifier = {
			founder_species_growth_mult = 0.01
		}
	}

	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		owner = { has_valid_civic = civic_distributism }					# Modded
	#	}
	#	planet_jobs_trade_produces_add = 0.5													# Modded
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|		# Modded
	#}

	triggered_planet_modifier = {
		potential = {
			owner = {
				OR = {
					has_valid_civic = civic_consumerism 			# Modded
					has_valid_civic = civic_consumerism_corporate	# Modded
				}
			}
		}
		planet_amenities_add = 200												# Modded
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_pleasure_seeker_empire = yes
				OR = {
					is_individual_machine = yes
					is_synthetic_empire = yes
				}
			}
		}
		modifier = {
			planet_pop_assembly_mult = 0.01
		}
	}

	weight = {
		weight = @high_prio_specialist_job_weight
		mult = value:job_weights_modifier|JOB|entertainer|RESOURCE|unity|FACTOR|0.25|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 3
			has_trait = trait_robot_domestic_protocols
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
		}
		modifier = {
			factor = 0.1
			is_domestic_servant = yes
		}

		modifier = {
			factor = 50
		}

		modifier = {
			add = 500
			exists = planet
			planet = {
				has_modifier = artistic_boom
			}
		}
		
		modifier = {	#Due to this being an ethic-based job
			add = 500
			entertainer_is_duelist_trigger = yes
			owner = { is_individual_machine = no }
		}
	}

	inline_script = "jobs/automodding_priority_amenities"
	
	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

duelist = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = BATTLE_THRALL_JOB_TRIGGER
			building_icon = building_holo_theatres
			# clothes_texture_index = 3
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = {
		battle_thrall_job_check_trigger = yes
	}

	resources = {
		category = planet_entertainers
		produces = {
			unity = 2
		}
		upkeep = {
			alloys = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_warrior_culture" }
		}

		planet_amenities_add = 100
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_amenities_mult|TYPE|councilor_warrior_culture|
	}

	triggered_planet_modifier = {
		potential = {
			owner = {
				OR = {
					has_valid_civic = civic_consumerism 			# Modded
					has_valid_civic = civic_consumerism_corporate	# Modded
				}
			}
		}
		planet_amenities_add = 200												# Modded
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 1000
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_warrior_culture" }
		}

		country_naval_cap_add = 0.2
		mult = value:councilor_level|TYPE|councilor_warrior_culture|
	}

	country_modifier = {
		country_naval_cap_add = 2
	}

	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		owner = { has_valid_civic = civic_distributism }				# Modded
	#	}
	#	planet_jobs_trade_produces_add = 0.5												# Modded
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|	# Modded
	#}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|duelist|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			has_slavery_type = { type = slavery_military }
		}
		# modifier = {
		#	factor = 1.5
		#	has_job_type = duelist	# No Longer Used in Stellaris 4.0
		#}
		# modifier = {
		#	factor = 0.5
		#	NOT = { has_job_type = duelist }		# No Longer Used in Stellaris 4.0
		#	exists = planet
		#	planet = {
		#		free_amenities > 500
		#	}
		#}
	}

	inline_script = "jobs/automodding_priority_amenities"
}

culture_worker = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_autochthon_monument
			# clothes_texture_index = 3
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_culture_workers
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 3
		}
		produces = {
			trigger = {
				exists = owner										# Modded
				owner = { has_valid_civic = civic_naturalism }		# Modded
				planet = {
					OR = {
						has_deposit = d_massive_glacier 			# Modded
						has_deposit = d_noxious_swamp				# Modded
						has_deposit = d_quicksand_basin				# Modded
						has_deposit = d_deep_sinkhole				# Modded
						has_deposit = d_toxic_kelp					# Modded
						has_deposit = d_dense_jungle				# Modded
						has_deposit = d_active_volcano				# Modded
						has_deposit = d_mountain_range				# Modded
						has_deposit = d_dangerous_wildlife_blocker	# Modded
						has_deposit = d_titanic_life_blocker		# Modded
						has_deposit = d_wandering_forests			# Modded
						has_deposit = d_migrating_forest_reserve	# Modded
						has_deposit = d_migrating_forests			# Modded
						has_deposit = d_alien_pets_deposit			# Modded
						has_deposit = d_savage_wildlands			# Modded
					}
				}
			}
			unity = 4												# Modded
			society_research = 4									# Modded
		}
		upkeep = {
			trigger = {
				exists = owner										# Modded
				owner = { has_valid_civic = civic_naturalism }		# Modded
				planet = {
					OR = {
						has_deposit = d_massive_glacier				# Modded
						has_deposit = d_noxious_swamp				# Modded
						has_deposit = d_quicksand_basin				# Modded
						has_deposit = d_deep_sinkhole				# Modded
						has_deposit = d_toxic_kelp					# Modded
						has_deposit = d_dense_jungle				# Modded
						has_deposit = d_active_volcano				# Modded
						has_deposit = d_mountain_range				# Modded
						has_deposit = d_dangerous_wildlife_blocker	# Modded
						has_deposit = d_titanic_life_blocker		# Modded
						has_deposit = d_wandering_forests			# Modded
						has_deposit = d_migrating_forest_reserve	# Modded
						has_deposit = d_migrating_forests			# Modded
						has_deposit = d_alien_pets_deposit			# Modded
						has_deposit = d_savage_wildlands			# Modded
					}
				}
			}
			consumer_goods = -1										# Modded
		}
	}

	inline_script = "jobs/culture_worker_outputs"

	planet_modifier = {
		pop_government_ethic_attraction = 0.10
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|culture_worker|RESOURCE|unity|
		# We deliberately don't weight the ethics-based modifiers
		modifier = {
			factor = 0.2
			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		# modifier = {
		#	factor = 1.5
		#	has_job_type = culture_worker	# No Longer Used in Stellaris 4.0
		#}
	}

	inline_script = "jobs/automodding_priority_unity"
}

bureaucrat = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_capital
			# clothes_texture_index = 3
		}
		swap_type = {
			trigger = {
				bureaucrat_is_manager = yes
			}
			name = manager
			desc = manager
			icon = manager
			building_icon = building_bureaucratic_1
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 2
		}
		swap_type = {				# Enriad - re-enabled to fix
			trigger = {
				bureaucrat_is_priest = yes
			}
			name = priest
			desc = priest
			icon = priest
			building_icon = building_temple
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 5
		}
		swap_type = {
			trigger = {
				bureaucrat_is_steward = yes
			}
			name = steward
			desc = steward
			icon = manager
			building_icon = building_bureaucratic_1
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 10
		}
		swap_type = {				# Enriad - re-enabled to fix
			trigger = {
				bureaucrat_is_preacher = yes
			}
			name = preacher
			desc = preacher
			icon = numistic_priest
			building_icon = building_temple
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 15
		}
		swap_type = {
			trigger = {
				bureaucrat_is_numistic_priest = yes
			}
			name = numistic_priest
			desc = numistic_priest
			icon = numistic_priest
			building_icon = building_nuumismatic_shrine
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 20
		}
		swap_type = {
			trigger = {
				bureaucrat_is_unifier = yes
			}
			name = unifier
			desc = unifier
			icon = overlord_propagandist
			building_icon = building_capital
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 25
		}
		swap_type = {
			trigger = {
				bureaucrat_is_culture_worker = yes
			}
			name = culture_worker
			desc = culture_worker
			icon = culture_worker
			building_icon = building_artist_patron
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 30
		}
		swap_type = {
			trigger = {
				bureaucrat_is_death_priest = yes
			}
			name = death_priest
			desc = death_priest
			icon = death_priest
			building_icon = building_sacrificial_temple_1
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 35
		}
		swap_type = {
			trigger = {
				bureaucrat_is_low_tech = yes
			}
			name = low_tech_bureaucrat
			desc = low_tech_bureaucrat
			icon = low_tech_bureaucrat
			building_icon = building_low_tech_admin_hub
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 40
		}
		swap_type = {
			trigger = {
				bureaucrat_is_low_tech_manager = yes
			}
			name = low_tech_manager
			desc = low_tech_manager
			icon = manager
			building_icon = building_low_tech_admin_hub
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 45
		}
		swap_type = {
			trigger = {
				bureaucrat_is_low_tech_priest = yes
			}
			name = low_tech_priest
			desc = low_tech_priest
			icon = low_tech_priest
			building_icon = building_low_tech_admin_hub
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 50
		}
		swap_type = {
			trigger = {
				bureaucrat_is_memorialist = yes
			}
			name = memorialist
			desc = memorialist
			icon = death_chronicler
			building_icon = building_galactic_memorial_1
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 200
		}
		swap_type = {
			trigger = {
				bureaucrat_is_death_priest = yes
				bureaucrat_is_manager = yes
			}
			name = death_manager
			desc = death_manager
			icon = manager
			building_icon = building_temple
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 300
		}
		swap_type = {
			trigger = {
				bureaucrat_is_haruspex = yes
			}
			name = haruspex
			desc = haruspex
			icon = haruspex
			building_icon = building_the_sanctum_of_augmentation
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 500
		}
	}
	tags = { unity }

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	possible = {
		complex_specialist_job_check_trigger = yes
		if = {												# Enriad - disable it if you dont want Strong Spiritualist Restriction for Priest jobs
			limit = { bureaucrat_is_spiritualist = yes }
			OR = {
				has_ethic = ethic_spiritualist
				has_ethic = ethic_fanatic_spiritualist
				owner = { is_individual_machine = yes }		# Cog Note - This is the fix/bypass for individualist machines
				owner = { is_gestalt = yes }
			}
		}
	}

	resources = {
		category = planet_bureaucrats
		# PRODUCES
		produces = {
			unity = 4
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_gestalt = no }
			}
			consumer_goods = 2
		}
		##Government Swaps
		produces = {
			trigger = {
				bureaucrat_is_manager = yes
			}
			trade = 2
		}
		produces = {
			trigger = {
				bureaucrat_is_steward = yes
			}
			trade = 1
		}
		produces = {				# Enriad - re-enabled to fix 
			trigger = {
				bureaucrat_is_preacher = yes
			}
			unity = -1
			trade = 2
		}
		produces = {				# Enriad - re-enabled to fix
			trigger = {
				bureaucrat_is_death_priest = yes
			}
			unity = -1
			society_research = 1
		}
		produces = {				# Enriad - re-enabled to fix
			trigger = {
				bureaucrat_is_death_priest = yes
				exists = owner
				owner = { has_sacrificial_edict = yes }
			}
			unity = 3
		}
		produces = {
			trigger = {
				bureaucrat_is_haruspex = yes
			}
			unity = -1
			engineering_research = 2
		}
		##Broken Shackles
		produces = {
			trigger = {
				exists = planet
				planet = {
					bureaucrat_is_low_tech = yes
				}
			}
			unity = -2
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					bureaucrat_is_low_tech = yes
				}
				owner = { is_gestalt = no }
			}
			consumer_goods = -1
		}
		produces = {
			trigger = {
				exists = planet
				planet = {
					bureaucrat_is_low_tech_manager = yes
				}
			}
			unity = -2
			trade = 2
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					bureaucrat_is_low_tech_manager = yes
				}
				owner = { is_gestalt = no }
			}
			consumer_goods = -1
		}
		produces = {
			trigger = {
				exists = planet
				planet = {
					bureaucrat_is_low_tech_priest = yes
				}
			}
			unity = -2
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					bureaucrat_is_low_tech_priest = yes
				}
				owner = { is_gestalt = no }
			}
			consumer_goods = -1
		}
		##Event Swaps
		upkeep = {
			trigger = {
				bureaucrat_is_unifier = yes
				owner = { is_gestalt = no }
			}
			consumer_goods = -1
		}
		# Job Swap - Numistic Priests
		produces = {
			trigger = {
				exists = planet
				planet = {
					bureaucrat_is_numistic_priest = yes
				}
			}
			unity = -2
			trade = 6
		}
		# Civics Additions
		produces = {
			trigger = {
				exists = owner											# Modded
				owner = {
					has_valid_civic = civic_byzantine_bureaucracy		# Modded
				}
			}
			unity = 1													# Modded
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_byzantine_bureaucracy
				}
				owner = { is_gestalt = no }
			}
			consumer_goods = -1
		}
		produces = {
			trigger = {
				exists = owner													# Modded
				owner = {
					OR = {
						has_valid_civic = civic_exalted_priesthood				# Modded
						has_valid_civic = civic_imperial_cult					# Modded
						has_valid_civic = civic_divine_council					# Modded
						has_valid_civic = civic_spiritual_democracy				# Modded
					}
				}
			}
			unity = 1															# Modded
		}
		inline_script = "jobs/ethic_job_resources_memorialist"			# Enriad - forgotten line from vanilla code, files exist and NOT MODDED
	}
	
	# Amenities
	triggered_planet_modifier = {		# Enriad - re-enabled to fix spiritualists
		potential = {
			bureaucrat_is_priest = yes
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			bureaucrat_is_steward = yes
		}
		planet_amenities_add = 100
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			bureaucrat_is_steward = yes
			has_councilor = { COUNCILOR = councilor_worker_coop }
		}
		planet_amenities_add = 25
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_amenities_mult|TYPE|councilor_worker_coop|
	}
	triggered_planet_modifier = {		# Enriad - re-enabled to fix spiritualists
		potential = {
			bureaucrat_is_preacher = yes
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {		# Enriad - re-enabled to fix spiritualists
		potential = {
			bureaucrat_is_death_priest = yes
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			bureaucrat_is_unifier = yes
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			bureaucrat_is_low_tech_priest = yes
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			bureaucrat_is_numistic_priest = yes
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			bureaucrat_is_haruspex = yes
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			bureaucrat_is_culture_worker = yes
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	inline_script = "jobs/ethic_job_modifiers_memorialist"			# Enriad - forgotten line from original
	
	##Stability
	triggered_planet_modifier = {
		potential = {
			bureaucrat_is_memorialist = yes
		}
		planet_stability_add = 0.5
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_byzantine_bureaucracy }
		}
		modifier = {
			planet_stability_add = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = {
				check_modifier_value = {
					modifier = planet_bureaucrats_stability_produces_add
					value > 0
				}
			}
		}
		planet_stability_add = 1
		mult = planet.modifier:planet_bureaucrats_stability_produces_add
	}
	
	## Ethics Attraction
	triggered_planet_modifier = {
		potential = {
			bureaucrat_is_culture_worker = yes
		}
		pop_government_ethic_attraction = 0.10
	}

	triggered_planet_modifier = {			# Enriad - moved from EaC Priest
		potential = {
			exists = owner
			OR = {
				bureaucrat_is_priest = yes
				bureaucrat_is_death_priest = yes
			}
			owner = { is_gestalt = no }
		}
		pop_ethic_spiritualist_attraction_mult = 0.05
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			OR = {
				bureaucrat_is_preacher = yes
			}
			owner = { is_gestalt = no }
		}
		pop_ethic_spiritualist_attraction_mult = 0.10
		pop_ethic_capitalism_attraction_mult = 0.10
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_add = 100
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|bureaucrat|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner									# Modded
			owner = { has_valid_civic = civic_stratocracy }	# Modded
		}
		planet_jobs_produces_mult = 0.01					# Modded
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = {
					has_tradition = tr_modularity_4
				}
			}
		}
		planet_jobs_worker_produces_mult = 0.02
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|bureaucrat|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		# modifier = {		# Enriad - useless because of Strong Spiritualist restriction
		# 	factor = 2
		# 	exists = owner
		# 	owner = {
		# 		OR = {
		# 			has_civic = civic_exalted_priesthood
		# 			has_civic = civic_imperial_cult
		# 			has_civic = civic_divine_council
		# 			has_civic = civic_spiritual_democracy
		# 		}
		# 	}
		# }
		modifier = {
			factor = 300
			bureaucrat_is_spiritualist = yes
		}
		# modifier = {
		# 	factor = 0								# Enriad -  0.1 is original default so it wont be annoying, 0 for Soft-spiritualist-restriction that can be forced for non-spiritualist pops
		# 	bureaucrat_is_spiritualist = yes
		# 	NOR = {
		# 		has_ethic = ethic_spiritualist
		# 		has_ethic = ethic_fanatic_spiritualist
		# 	}
		# }
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_unity"
	
	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

chemist = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_chemical_plant
			# clothes_texture_index = 3
		}
	}
	
	tags = { strategic_resource volatile_motes }

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_chemists
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			volatile_motes = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			volatile_motes = 2.5
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			minerals = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			food = 15
		}
		upkeep = {
			trigger = {
				exists = owner												# Modded
				OR = {
					owner = { has_valid_civic = civic_circular_economy }		# Modded
					owner = { 
						has_valid_civic = civic_machine_zero_waste_protocols 	# Modded
						OR = {
							has_ethic = ethic_green	
							has_ethic = ethic_fanatic_green		
						}
					}	
				}
			}
			minerals = -1													# Modded
		}
	}

	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		owner = { has_valid_civic = civic_distributism }				# Modded
	#	}
	#	planet_jobs_trade_produces_add = 0.5												# Modded
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|	# Modded
	#}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|chemist|RESOURCE|volatile_motes|
		modifier = {
			factor = 0.2
			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		# modifier = {
		#	factor = 7
		#	has_job_type = chemist	# No Longer Used in Stellaris 4.0
		#}
	}
	
	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

translucer = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_crystal_plant
			# clothes_texture_index = 3
		}
	}
	tags = { strategic_resource rare_crystals }

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_translucers
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			rare_crystals = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			rare_crystals = 2.5
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			minerals = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			food = 15
		}
		upkeep = {
			trigger = {
				exists = owner												# Modded
				OR = {
					owner = { has_valid_civic = civic_circular_economy }		# Modded
					owner = { 
						has_valid_civic = civic_machine_zero_waste_protocols 	# Modded
						OR = {
							has_ethic = ethic_green	
							has_ethic = ethic_fanatic_green		
						}
					}	
				}
			}
			minerals = -1													# Modded
		}
	}

	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		owner = { OR = { has_valid_civic = civic_distributism } }		# Modded
	#	}
	#	planet_jobs_trade_produces_add = 0.5												# Modded
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|	# Modded
	#}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|translucer|RESOURCE|rare_crystals|
		modifier = {
			factor = 0.2
			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		# modifier = {
		#	factor = 7
		#	has_job_type = translucer	# No Longer Used in Stellaris 4.0
		#}
		modifier = {
			factor = 1.2
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}
	
	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

gas_refiner = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_refinery
			# clothes_texture_index = 3
		}
	}
	
	tags = { strategic_resource exotic_gases }

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_refiners
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			exotic_gases = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			exotic_gases = 2.5
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			minerals = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			food = 15
		}
		upkeep = {
			trigger = {
				exists = owner												# Modded
				OR = {
					owner = { has_valid_civic = civic_circular_economy }		# Modded
					owner = { 
						has_valid_civic = civic_machine_zero_waste_protocols 	# Modded
						OR = {
							has_ethic = ethic_green	
							has_ethic = ethic_fanatic_green		
						}
					}	
				}
			}
			minerals = -1													# Modded
		}
	}

	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		owner = { OR = { has_valid_civic = civic_distributism } }		# Modded
	#	}
	#	planet_jobs_trade_produces_add = 0.5												# Modded
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|	# Modded
	#}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|gas_refiner|RESOURCE|exotic_gases|
		modifier = {
			factor = 0.2
			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		# modifier = {
		#	factor = 7
		#	has_job_type = gas_refiner	# No Longer Used in Stellaris 4.0
		#}
		modifier = {
			factor = 1.2
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}
	
	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

healthcare = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_medical_1
			# clothes_texture_index = 3
		}
		# Mutagenic Spa Attendant
		swap_type = {
			trigger = {
				healthcare_is_mutagenic_trigger = yes
			}
			name = bath_attendant
			desc = bath_attendant
			icon = bath_attendant
			building_icon = building_toxic_bath
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 5
		}
		# Genomic Researchers
		swap_type = {
			trigger = {
				healthcare_is_genomic_researcher_trigger = yes
			}
			name = genomic_researcher
			desc = genomic_researcher
			icon = genomic_researcher
			building_icon = building_genomic_facility
			condition_string = SPECIALIST_JOB_TRIGGER
			weight = 10
		}
	}
	
	tags = { pop_growth pop_assembly amenities }

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	planet_modifier = {
		founder_species_growth_mult = 0.05
		bonus_pop_growth_mult = 0.05
		pop_environment_tolerance = 0.025
	}

	resources = {
		category = planet_doctors
		upkeep = {
			consumer_goods = 1
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					healthcare_is_mutagenic_trigger = yes
				}
			}
			consumer_goods = 1
		}
		# Job Swap - Genomic Researcher
		produces = {
			trigger = {
				exists = planet
				planet = {
					healthcare_is_genomic_researcher_trigger = yes
				}
			}
			society_research = 6
		}
		produces = {
			trigger = {
				exists = planet
				planet = {
					healthcare_is_genomic_researcher_trigger = yes
				}
				exists = owner
				owner = {
					has_completed_genetic_situation = yes
				}
			}
			society_research = 3
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					healthcare_is_genomic_researcher_trigger = yes
				}
			}
			consumer_goods = 2
		}
		upkeep = {
			trigger = {
				exists = owner									# Modded
				owner = { has_policy_flag = public_healthcare }	# Modded
			}
			consumer_goods = -0.5								# Modded
		}
		produces = {
			trigger = {
				exists = owner									# Modded
				owner = { has_policy_flag = public_healthcare }	# Modded
			}
			unity = 1											# Modded
		}
	}
	
	inline_script = "output/healthcare_triggered_modifiers"

	inline_script = "output/genomic_triggered_modifiers"

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_private_healthcare_corporate
					has_valid_civic = civic_welfare_state
				}
			}
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		exists = owner
	#		owner = { has_valid_civic = civic_private_healthcare_corporate }
	#	}
	#	planet_jobs_trade_produces_add = 4
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|
	#}
	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_planet_flag = has_private_clinics }
		}
		planet_amenities_add = 100
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		exists = planet
	#		planet = { has_planet_flag = has_private_clinics }
	#	}
	#	planet_jobs_trade_produces_add = 2
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|
	#}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_modifier = revolutionary_medigel_modifier }
		}
		founder_species_growth_mult = 0.025
		bonus_pop_growth_mult = 0.025
		pop_environment_tolerance = 0.0125
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_modifier = revolutionary_medigel_modifier
				has_valid_civic = civic_private_healthcare_corporate
			}
		}
		planet_amenities_add = 100
		planet_jobs_trade_produces_add = 2
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_modifier = revolutionary_medigel_modifier
				has_valid_civic = civic_welfare_state
			}
		}
		planet_amenities_add = 100
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner														# Modded
			owner = { has_policy_flag = public_healthcare }						# Modded
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
	}

	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		exists = owner														# Modded
	#		owner = { has_policy_flag = private_healthcare }					# Modded
	#	}
	#	planet_jobs_trade_produces_add = 2														# Modded
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|		# Modded
	#}

	weight = {
		weight = @high_prio_specialist_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		# modifier = {
		#	factor = 1.5
		#	has_job_type = healthcare	# No Longer Used in Stellaris 4.0
		#}
		modifier = {
			factor = 2
			owner = {
				OR = {
					has_valid_civic = civic_private_healthcare_corporate
					has_valid_civic = civic_welfare_state
				}
			}
		}
		modifier = {
			factor = 1.5
			planet = {
				has_branch_office = yes
				branch_office_owner = {
					has_valid_civic = civic_private_healthcare_corporate
				}
			}
		}
		modifier = {
			factor = 0.5
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 10
			planet = {
				free_amenities < 0
				has_available_jobs = healthcare
			}
		}
		modifier = {
			factor = 3											# Modded
			exists = owner										# Modded
			owner = { has_policy_flag = private_healthcare }	# Modded
		}
		modifier = {
			factor = 3											# Modded
			exists = owner										# Modded
			owner = { has_policy_flag = public_healthcare }		# Modded
		}
	}

	inline_script = "jobs/automodding_priority_amenities"
	
	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

# manager = {						# Enriad - Marked for delition for priests fix
# 	category = specialist
# 	swappable_data = {
# 		default = {
# 			condition_string = SPECIALIST_JOB_TRIGGER
# 			building_icon = building_capital
# 			# clothes_texture_index = 3
# 		}
# 	}

# 	possible_pre_triggers = {
# 		has_owner = yes
# 		is_being_purged = no
# 		is_being_assimilated = no
# 		is_sapient = yes
# 	}

# 	possible_precalc = can_fill_specialist_job

# 	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
# 	#	potential = {
# 	#		always = yes
# 	#	}
# 	#	planet_jobs_trade_produces_add = 2
# 	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|
# 	#}

# 	resources = {
# 		category = planet_managers
# 		produces = {
# 			unity = 4
# 		}
# 		upkeep = {
# 			consumer_goods = 2
# 		}
# 	}

# 	triggered_country_modifier = {
# 		potential = {
# 			exists = owner
# 			owner = { has_valid_civic = civic_efficient_bureaucracy }
# 		}
# 		country_edict_fund_add = 2
# 		mult = value:job_total_output_modifier|JOB|manager|RESOURCE|unity|
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			planet = {
# 				has_active_building = building_league_offices
# 			}
# 		}
# 		planet_amenities_add = 100
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
# 	}

# 	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
# 	#	potential = {
# 	#		owner = { has_valid_civic = civic_distributism }				# Modded
# 	#	}
# 	#	planet_jobs_trade_produces_add = 0.5												# Modded
# 	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|	# Modded
# 	#}

# 	triggered_planet_modifier = {
# 		potential = {
# 			planet = {
# 				exists = owner
# 				owner = {
# 					has_tradition = tr_modularity_4
# 				}
# 			}
# 		}
# 		planet_jobs_worker_produces_mult = 0.02
# 	}

# 	weight = {
# 		weight = @specialist_job_weight
# 		mult = value:job_weights_modifier|JOB|manager|RESOURCE|unity|
# 		# mult = value:scripted_modifier_job_weight_mult|MODIFIER|trader_jobs_bonus_workforce_mult|	# No Longer Used in Stellaris 4.0
# 		modifier = {
# 			factor = 0.2
# 			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
# 		}
# 		modifier = {
# 			factor = 0.1
# 			can_take_servant_job = yes
# 		}
# 		# modifier = {
# 		#	factor = 1.5
# 		#	has_job_type = manager	# No Longer Used in Stellaris 4.0
# 		#}
# 		modifier = {
# 			factor = 0.1
# 			is_enslaved = yes
# 			has_slavery_type = { type = slavery_indentured }
# 		}
# 	}

# 	inline_script = "jobs/automodding_priority_unity"
# }

foundry = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_foundry_1
			# clothes_texture_index = 3
		}
		# Catalytic Swap
		swap_type = {
			trigger = {
				industrial_jobs_are_catalytic_trigger = yes
			}
			name = catalytic_technician
			desc = job_catalytic_technician_desc
			weight = 5
		}
	}
	
	tags = { alloys }

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 3
		}
		produces = {
			trigger = {
				industrial_jobs_are_catalytic_trigger = yes
			}
			alloys = 0.75
		}
		upkeep = {
			trigger = {
				industrial_jobs_are_catalytic_trigger = no
			}
			minerals = 6
		}
		upkeep = {
			trigger = {
				industrial_jobs_are_catalytic_trigger = yes
			}
			food = 9
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_reduction
		}
		upkeep = {
			trigger = {
				industrial_jobs_are_catalytic_trigger = no
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			minerals = 2
		}
		upkeep = {
			trigger = {
				industrial_jobs_are_catalytic_trigger = yes
				planet = {
					has_planet_flag = has_material_requisitorium
					has_building = building_ministry_production
				}
			}
			food = 3
		}
		upkeep = {
			trigger = {
				exists = owner												# Modded
				owner = { is_green = yes }									# Modded
			}
			minerals = -1													# Modded
		}
		upkeep = {
			trigger = {
				exists = owner												# Modded
				owner = { has_valid_civic = civic_eco_warfare }				# Modded
			}
			minerals = -1													# Modded
			food = 1														# Modded
		}
		upkeep = {
			trigger = {
				is_lithoid_empire = no										# Modded
				exists = owner												# Modded
				owner = { has_technology = tech_bioreactor }				# Modded
			}
			minerals = -1													# Modded
			food = 1														# Modded
		}
		inline_script = "output/foundry_output"
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_overlord
		}
	}

	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		exists = owner													# Modded
	#		owner = { OR = { has_valid_civic = civic_distributism } }		# Modded
	#	}
	#	planet_jobs_trade_produces_add = 0.5												# Modded
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|	# Modded
	#}

	weight = {
		weight = @specialist_job_weight # Fairly important job
		mult = value:job_weights_modifier|JOB|foundry|RESOURCE|alloys|
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 5
			has_trait = trait_cyborg_creed_of_construction
		}
	}
	
	inline_script = "jobs/automodding_priority_alloys"
	
	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

artisan = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_factory_1
		}
		swap_type = {
			trigger = {
				artisan_is_artificer_trigger = yes
			}
			name = artificer
			desc = artificer
			icon = artificer
			weight = 5
		}
		swap_type = {
			trigger = {
				artisan_is_pearl_diver_trigger = yes
			}
			name = pearl_diver
			desc = pearl_diver
			icon = pearl_diver
			building_icon = building_food_processing_facility
			weight = 5
		}
		swap_type = {
			trigger = {
				artisan_is_artificer_trigger = yes
				artisan_is_pearl_diver_trigger = yes
			}
			name = pearl_crafter
			desc = pearl_crafter
			icon = pearl_diver
			building_icon = building_food_processing_facility
			weight = 10
		}
	}
	tags = { consumer_goods }

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}
	
	resources = {
		category = planet_artisans
		# PRODUCES
		produces = {
			consumer_goods = 6
		}
		# Job Swap - Artificers
		produces = {
			trigger = {
				artisan_is_artificer_trigger = yes
			}
			consumer_goods = 1
			engineering_research = 2
			trade = 2
		}
		# Job Swap - Pearl Divers
		produces = {
			trigger = {
				exists = planet
				planet = {
					artisan_is_pearl_diver_trigger = yes
				}
			}
			trade = 2
			unity = 1
		}
		produces = {
			trigger = {
				exists = planet
				planet = {
					artisan_is_pearl_diver_trigger = yes
				}
				has_councilor = { COUNCILOR = "councilor_anglers" }
			}
			consumer_goods = @councilor_anglers_pearl_diver_consumer_goods_bonus
			mult = value:councilor_level|TYPE|councilor_anglers|
		}
		produces = {
			trigger = {
				exists = planet
				planet = {
					artisan_is_pearl_diver_trigger = yes
				}
				has_councilor = { COUNCILOR = "councilor_machine_anglers" }
			}
			consumer_goods = @councilor_machine_anglers_pearl_diver_consumer_goods_bonus
			mult = value:councilor_level|TYPE|councilor_machine_anglers|
		}
		# Job Swap - Catalytic
		produces = {
			trigger = {
				industrial_jobs_are_catalytic_trigger = yes
			}
			consumer_goods = 1.5
		}
		# UPKEEP
		upkeep = {
			trigger = {
				industrial_jobs_are_catalytic_trigger = no
			}
			minerals = 6
		}
		# Job Swap - Pearl Divers
		upkeep = {
			trigger = {
				industrial_jobs_are_catalytic_trigger = no
				exists = planet
				planet = {
					artisan_is_pearl_diver_trigger = yes
				}
			}
			minerals = -2
			food = 3
		}
		# Job Swap - Catalytic
		upkeep = {
			trigger = {
				industrial_jobs_are_catalytic_trigger = yes
			}
			food = 9
		}
		upkeep = {
			trigger = {
				industrial_jobs_are_catalytic_trigger = yes
				exists = planet
				planet = {
					artisan_is_pearl_diver_trigger = yes
				}
			}
			minerals = 2
			food = -3
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { country_uses_consumer_goods = yes }
				}
			}
			consumer_goods = @requisitorium_consumer_goods_reduction
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { country_uses_consumer_goods = yes }
				}
			}
			minerals = 1
		}
		upkeep = {
			trigger = {
				industrial_jobs_are_catalytic_trigger = yes
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { country_uses_consumer_goods = yes }
				}
			}
			food = 1.5
		}
		produces = {
			trigger = {
				exists = owner											# Modded
				owner = {
					OR = {
						has_valid_civic = civic_consumerism 			# Modded
						has_valid_civic = civic_consumerism_corporate	# Modded
					}
				}
			}
			consumer_goods = 1											# Modded
		}
		upkeep = {
			trigger = {
				exists = owner												# Modded
				owner = {
					has_edict = industrial_subsidies						# Modded
				}
			}
			energy = 1														# Modded
		}
		upkeep = {
			trigger = {
				exists = owner												# Modded
				owner = { is_green = yes }									# Modded
			}
			minerals = -1													# Modded
		}
		upkeep = {
			trigger = {
				exists = owner												# Modded
				owner = { has_valid_civic = civic_naturalism }				# Modded
			}
			minerals = -1													# Modded
			food = 1														# Modded
		}
		upkeep = {
			trigger = {
				is_lithoid_empire = no										# Modded
				exists = owner												# Modded
				owner = { has_technology = tech_bioreactor }				# Modded
			}
			minerals = -1													# Modded
			food = 1														# Modded
		}
		inline_script = "output/factory_output"
	}

	overlord_resources = {
		category = planet_requisitioned_consumer_goods
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { is_gestalt = no }
				}
			}
			consumer_goods = @requisitorium_consumer_goods_overlord
		}
	}

	# riggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		exists = owner													# Modded
	#		owner = { OR = { has_valid_civic = civic_distributism } }		# Modded
	#	}
	#	planet_jobs_trade_produces_add = 0.5												# Modded
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|	# Modded
	#}
	
	triggered_planet_modifier = {
		potential = {
			artisan_is_pearl_diver_trigger = yes
			exists = owner
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|artisan|RESOURCE|consumer_goods|
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}

		# low income modifier
		modifier = {
			factor = 1.2
			exists = planet
			planet = {
				has_available_jobs = "artisan"
			}
			exists = owner
			owner = {
				is_ai = yes
				has_monthly_income = {
					resource = consumer_goods
					value < 5
				}
			}
		}
	}
	inline_script = "jobs/automodding_priority_consumer_goods"

	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

# Trader - Entirely Modded
entrepreneur = {
	category = specialist
	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_commercial_megaplex
			# clothes_texture_index = 3
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_merchants
		upkeep = {
			consumer_goods = 5
		}
	}

	planet_modifier = {
		planet_jobs_trade_produces_add = 5
		planet_jobs_rare_crystals_produces_mult = 0.04
		planet_jobs_volatile_motes_produces_mult = 0.04
		planet_jobs_exotic_gases_produces_mult = 0.04
	}

	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		this = { has_trait = trait_thrifty }	# Cog Note - Note sure why this was set to PREV = {
	#	}
	#	planet_jobs_trade_produces_add = 1
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|
	#}

	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	#	potential = {
	#		this = { has_trait = trait_nuumismatic_administration }	# Cog Note - Note sure why this was set to PREV = {
	#	}
	#	planet_jobs_trade_produces_add = 1
	#	mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|
	#}

	# triggered_planet_modifier = {		# Enriad - not working, not intended to work in 4.0
	# 	potential = {
	# 		prev = {	# Enriad - current scope is planet where modifier is applied, prev is pop with merchant job
	# 			OR = {
	# 				has_trait = trait_robot_domestic_protocols
	# 				has_trait = trait_charismatic
	# 			}
	# 		}
	# 	}
	# 	planet_amenities_add = 100
	# 	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	# }

	weight = {
		weight = @specialist_job_weight
		modifier = {
			factor = 2.0
			has_trait = trait_thrifty
		}
		modifier = {
			factor = 2.0
			has_trait = trait_nuumismatic_administration
		}
		modifier = {
			factor = 1.5
			OR = {
				has_trait = trait_robot_domestic_protocols
				has_trait = trait_charismatic
			}
		}
		modifier = {
			factor = 0.5
			has_trait = trait_repugnant
		}
		modifier = {
			factor = 1.25
			owner = { has_civic = civic_corporate_dominion	}
			has_trait = trait_brainslug
		}
		modifier = {
			factor = 1.125
			owner = { has_civic = civic_corporate_dominion	}
			has_trait = trait_presapient_natural_intellectuals
		}
		modifier = {
			factor = 1.125
			owner = { has_civic = civic_corporate_dominion	}
			has_trait = trait_robust
		}
		# Crisis purge
		modifier = {
			factor = 0.01
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
			OR = { # Contingency won't purge itself
				NOT = { exists = event_target:custodian_bot }
				AND = {
					exists = event_target:custodian_bot
					NOT = { species = { is_same_value = event_target:custodian_bot } }
				}
			}
		}
	}
}
