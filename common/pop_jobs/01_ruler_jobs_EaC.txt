###################
# Fancy Jobs
###################

politician = {
	category = ruler
	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_capital
			# clothes_texture_index = 1
			#icon = administrator
			icon = politician
		}
		swap_type = {
			trigger = {
				politician_is_executive = yes
			}
			name = executive
			icon = executive
			desc = job_executive_desc
			weight = 5
		}
		swap_type = {
			trigger = {
				politician_is_science_director = yes
			}
			name = head_researcher
			icon = researcher
			desc = job_head_researcher_desc
			weight = 5
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
			}
			name = noble
			icon = noble
			desc = job_noble_desc
			weight = 10
		}
		swap_type = {	# Enriad - Elite Merchants are Moguls
			trigger = {
				politician_is_merchant = yes
			}
			name = mogul
			icon = mogul
			desc = job_mogul_desc
			weight = 10
		}
		swap_type = {
			trigger = {
				politician_is_high_priest = yes
			}
			name = high_priest
			icon = high_priest
			desc = job_high_priest_desc
			weight = 10
		}
		swap_type = {
			trigger = {
				politician_is_commandante = yes
			}
			name = commandante
			icon = commandante
			desc = job_commandante_desc
			weight = 10
		}
		swap_type = {
			trigger = {
				politician_is_commandante_pirate = yes
			}
			name = commandante_pirate
			icon = commandante_pirate
			desc = job_commandante_pirate_desc
			weight = 10
		}
		swap_type = {
			trigger = {
				politician_is_supervisor = yes
			}
			name = supervisor
			icon = supervisor
			desc = job_supervisor_desc
			weight = 10
		}
		swap_type = {
			trigger = {
				politician_is_technophant = yes
			}
			name = technophant
			icon = technophant
			desc = job_technophant_desc
			weight = 30
		}
		swap_type = {
			trigger = {
				politician_is_planetary_warden = yes
			}
			name = warden
			icon = enforcer
			desc = job_warden_desc
			weight = 15
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_science_director = yes
			}
			name = noble_researcher
			icon = noble
			desc = job_noble_researcher_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_high_priest = yes
			}
			name = sacred_noble
			icon = noble
			desc = job_sacred_noble_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_merchant = yes
			}
			name = noble_merchant
			icon = noble
			desc = job_noble_merchant_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_supervisor = yes
			}
			name = noble_supervisor
			icon = noble
			desc = job_noble_supervisor_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_commandante = yes
			}
			name = noble_commandante
			icon = noble
			desc = job_noble_commandante_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_commandante_pirate = yes
			}
			name = noble_commandante_pirate
			icon = noble
			desc = job_noble_commandante_pirate_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_augmentation_merchant = yes
			}
			name = augmentation_merchant
			icon = augmentor
			desc = job_augmentation_merchant_desc
			weight = 20
		}
	}
	
	tags = { unity amenities }

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job

	resources = {
		category = planet_politicians
		produces = {
			unity = 6
		}
		upkeep = {
			consumer_goods = 2
		}
		##Executive
		produces = {
			trigger = {
				politician_is_executive = yes
			}
			trade = 4
		}
		##Mogul
		produces = {
			trigger = {
				exists = planet
				planet = {
					OR = {
						politician_is_merchant = yes
						politician_is_augmentation_merchant = yes
					}
				}
			}
			unity = -2
			trade = 6
		}
		##Science Director
		produces = {
			trigger = {
				exists = planet
				planet = {
					politician_is_science_director = yes
				}
			}
			unity = -2
			physics_research = 2
			society_research = 2
			engineering_research = 2
		}
		##High Priest
		produces = {
			trigger = {
				exists = planet
				planet = {
					politician_is_high_priest = yes
				}
			}
			unity = 2
		}
		##Commander
		produces = {
			trigger = {
				exists = planet
				planet = {
					OR = {
						politician_is_commandante = yes
						politician_is_commandante_pirate = yes
					}
				}
			}
			unity = -2
		}
		##Commander Pirate
		produces = {
			trigger = {
				exists = planet
				planet = {
					OR = {
						politician_is_commandante_pirate = yes
					}
				}
			}
			trade = 2
		}
		##Thinker
		produces = {
			trigger = {
				exists = planet
				planet = {
					politician_is_supervisor = yes
				}
			}
			unity = 1				# Enriad - to be balanced
			society_research = 5	# Enriad - to be balanced
		}
		##Technophant
		produces = {
			trigger = {
				exists = planet
				planet = {
					politician_is_technophant = yes
				}
			}
			engineering_research = 4
		}
		##Byzantine Bureaucracy civic			# Enriad - Disabled bc it is not intended by civic tooltip
		# produces = {
		# 	trigger = {
		# 		exists = owner
		# 		owner = {
		# 			has_valid_civic = civic_byzantine_bureaucracy
		# 		}
		# 		exists = planet
		# 		planet = {
		# 			politician_is_high_priest = yes
		# 		}
		# 	}
		# 	unity = 1
		# }
		# upkeep = {
		# 	trigger = {
		# 		exists = owner
		# 		owner = {
		# 			has_valid_civic = civic_byzantine_bureaucracy
		# 		}
		# 		exists = planet
		# 		planet = {
		# 			politician_is_high_priest = yes
		# 		}
		# 	}
		# 	consumer_goods = -1
		# }
		##Harmonious Hierarchy civic
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_harmonious_hierarchy
					has_valid_civic = civic_harmonious_hierarchy_corporate
				}
			}
			unity = 1
		}
		##Stratocratic Republic civic
		produces = {
			trigger = {
				exists = owner
				owner = {  has_valid_civic = civic_citizen_service }
			}
			unity = 1
		}
		##Theocratic Republic civic
		produces = {
			trigger = {
				exists = owner
				owner = {  has_valid_civic = civic_spiritual_democracy }
			}
			society_research = 3
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	#Noble
	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = {
				politician_is_noble = yes
			}
		}
		planet_stability_add = 2
	}
	#High Priest
	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = {
				politician_is_high_priest = yes
			}
		}
 		pop_ethic_spiritualist_attraction_mult = 0.10
	}
	#Commander		# Enriad - All bonuses halved to match previous version numbers
	triggered_country_modifier = {
		potential = {
			exists = planet
			planet = {
				politician_is_commandante = yes
			}
		}
		country_naval_cap_add = 1.5
	}
	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = {
				politician_is_commandante = yes
			}
		}
		planet_orbital_bombardment_damage = -0.075
		planet_stability_add = 1.5
		planet_defense_armies_add = 1
	}
	#Pirate Commander
	triggered_country_modifier = {
		potential = {
			exists = planet
			planet = {
				politician_is_commandante_pirate = yes
			}
		}
		country_naval_cap_add = 2
		# planet_jobs_trade_produces_add = 2			# don't work in 4.0, changed to +2 trade
		pop_government_ethic_attraction = -0.015
	}
	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = {
				politician_is_commandante_pirate = yes
			}
		}
		planet_orbital_bombardment_damage = -0.1
		planet_stability_add = 3
		planet_defense_armies_add = 1
	}
	#Thinker		# Enriad - All bonuses halved to match previous version numbers
	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	#Mogul			# Enriad - All bonuses halved to match previous version numbers
	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 100
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_merchant_guilds }
		}
		modifier = {
			planet_jobs_energy_produces_mult = 0.035		# Enriad - can do gameplay, balance or performance issues
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_state_monopoly }
		}
		modifier = {
			planet_jobs_energy_produces_mult = 0.035		# Enriad - can do gameplay, balance or performance issues
			planet_jobs_minerals_produces_mult = 0.035		# Enriad - can do gameplay, balance or performance issues
		}
	}

	##Shadow Council
	triggered_planet_modifier = {
		potential = {
			exists = owner														# Modded
			owner = { OR = { has_valid_civic = civic_shadow_council } }			# Modded
		}
		planet_stability_add = 2												# Modded
	}

	##Welfare State
	triggered_planet_modifier = {
		potential = {
			exists = owner														# Modded
			owner = { OR = { has_valid_civic = civic_welfare_state } }			# Modded
		}
		planet_amenities_add = 200												# Modded
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
	}

	##Harmonious Hierarchy
	triggered_planet_modifier = {
	potential = {
		exists = owner															# Modded
		owner = {
			OR = {
				has_valid_civic = civic_harmonious_hierarchy					# Modded
				has_valid_civic = civic_harmonious_hierarchy_corporate			# Modded
			}
		}
	}
	planet_stability_add = 1													# Modded
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner														# Modded
			owner = {
				OR = {
					has_valid_civic = civic_harmonious_hierarchy				# Modded
					has_valid_civic = civic_harmonious_hierarchy_corporate		# Modded
				}
			}
		}
		planet_amenities_add = 500												# Modded
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
	}
	triggered_country_modifier = {
		potential = {
			exists = owner														# Modded
			owner = {
				OR = {
					has_valid_civic = civic_harmonious_hierarchy				# Modded
					has_valid_civic = civic_harmonious_hierarchy_corporate		# Modded
				}
			}
		}
		empire_size_pops_mult = -0.001											# Modded
	}

	##Machine Cult
	triggered_planet_modifier = {
		potential = {
			exists = owner														# Modded
			owner = { 
				OR = {
					has_valid_civic = civic_machine_cult						# Modded
					has_valid_civic = civic_machine_cult_machine				# Modded
				}
			}					
		}
		planet_jobs_engineering_research_produces_mult = 0.03					# Modded
		pop_bonus_workforce_mult = 0.02								# Modded
	}

	##Theocratic Republic
	triggered_planet_modifier = {
		potential = {
			exists = owner														# Modded
			owner = { has_valid_civic = civic_spiritual_democracy }
		}
		planet_amenities_add = 200												# Modded
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
	}
	
	inline_script = "output/politician_output_modifier"

	weight = {
		weight = @ruler_job_weight
		mult = value:job_weights_modifier|JOB|politician|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.1
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_unity"
	
	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = ruler
				AMOUNT = local_pop_amount
			}
		}
	}
}


# head_researcher = {		# Enriad - Marked for deletion for 4.0 politician rework
# 	category = ruler

# 	swappable_data = {
# 		default = {
# 			condition_string = RULER_JOB_TRIGGER
# 			building_icon = building_institute
# 			# clothes_texture_index = 1
# 			icon = researcher
# 		}
# 	}

# 	possible_pre_triggers = {
# 		has_owner = yes
# 		is_enslaved = no
# 		is_being_purged = no
# 		is_being_assimilated = no
# 		is_sapient = yes
# 	}

# 	possible_precalc = can_fill_ruler_job

# 	resources = {
# 		category = planet_researchers
# 		produces = {
# 			physics_research = 4
# 			engineering_research = 4
# 			society_research = 4
# 		}
# 		produces = {
# 			trigger = {
# 				owner = { has_valid_civic = civic_byzantine_bureaucracy }		# Modded
# 			}
# 			unity = 1															# Modded
# 		}
# 		upkeep = {
# 			consumer_goods = 2
# 		}
# 		upkeep = {
# 			trigger = {
# 				planet = {
# 					has_planet_flag = has_science_ministry
# 				}
# 			}
# 			consumer_goods = 1
# 		}
# 		upkeep = {
# 			trigger = {
# 				exists = owner													# Modded
# 				owner = {
# 					has_edict = research_subsidies								# Modded
# 				}
# 			}
# 			energy = 1															# Modded
# 		}
# 		upkeep = {
# 			trigger = {
# 				owner = { has_valid_civic = civic_byzantine_bureaucracy }		# Modded
# 			}
# 			consumer_goods = -1													# Modded
# 		}
# 	}

# 	overlord_resources = {
# 		category = planet_requisitioned_research
# 		produces = {
# 			trigger = {
# 				planet = {
# 					has_planet_flag = has_science_ministry
# 				}
# 			}
# 			physics_research = 2
# 			engineering_research = 2
# 			society_research = 2
# 		}
# 	}

# 	triggered_country_modifier = {
# 		modifier = {
# 			country_naval_cap_add = 1
# 		}
# 		mult = planet.modifier:job_researcher_naval_cap_add
# 	}

# 	# This needs to be triggered planet modifier to get the correct scope.
# 	triggered_planet_modifier = {
# 		potential = {
# 			always = yes
# 		}
# 		planet_amenities_add = 300
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			exists = owner														# Modded
# 			owner = { has_valid_civic = civic_shadow_council }					# Modded
# 		}
# 		planet_stability_add = 2												# Modded
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			exists = owner														# Modded
# 			owner = { has_valid_civic = civic_welfare_state }					# Modded
# 		}
# 		planet_amenities_add = 200												# Modded
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
# 	}

# 	weight = {
# 		weight = @ruler_job_weight
# 		mult = value:job_weights_research_modifier|JOB|head_researcher|
# 		mult = value:job_weights_modifier|JOB|head_researcher|RESOURCE|unity|FACTOR|0.25|
# 		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
# 		modifier = {
# 			factor = 0.2
# 			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
# 		}
# 		modifier = {
# 			factor = 2
# 			has_living_standard = { type = living_standard_academic_privilege }
# 		}
# 		# modifier = {
# 		#	factor = 5
# 		#	has_job_type = head_researcher	# No Longer Used in Stellaris 4.0
# 		#}
# 		modifier = {
# 			factor = 0.01
# 			exists = planet
# 			exists = planet.controller
# 			planet.controller = {
# 				OR = {
# 					is_country_type = swarm
# 					is_country_type = ai_empire
# 				}
# 			}
# 		}
# 		modifier = {
# 			factor = 5
# 			has_trait = trait_cyborg_creed_of_research
# 		}
# 	}

# 	inline_script = "jobs/automodding_priority_research"
# }

# high_priest = {		# Enriad - Marked for deletion for 4.0 politician rework
# 	category = ruler

# 	swappable_data = {
# 		default = {
# 			condition_string = RULER_JOB_TRIGGER
# 			building_icon = building_citadel_of_faith
# 			# clothes_texture_index = 1
# 		}
# 	}

# 	possible_pre_triggers = {
# 		has_owner = yes
# 		is_enslaved = no
# 		is_being_purged = no
# 		is_being_assimilated = no
# 		is_sapient = yes
# 	}

# 	possible_precalc = can_fill_ruler_job
# 	possible = {
# 		# NOT = { has_ethic = ethic_materialist }
# 		OR = {
# 			has_ethic = ethic_spiritualist
# 			owner = { is_individual_machine = yes }
# 		}
# 	}

# 	resources = {
# 		category = planet_bureaucrats
# 		produces = {
# 			unity = 8
# 		}
# 		upkeep = {
# 			consumer_goods = 2
# 		}
# 		produces = {
# 			trigger = {
# 				exists = owner												# Modded
# 				owner = { has_valid_civic = civic_spiritual_democracy }		# Modded
# 			}
# 			society_research = 2											# Modded
# 		}
# 		produces = {
# 			trigger = {
# 				owner = { has_valid_civic = civic_byzantine_bureaucracy }	# Modded
# 			}
# 			unity = 1														# Modded
# 		}
# 		upkeep = {
# 			trigger = {
# 				owner = { has_valid_civic = civic_byzantine_bureaucracy }	# Modded
# 			}
# 			consumer_goods = -1												# Modded
# 		}
# 	}

# 	planet_modifier = {
# 		pop_ethic_spiritualist_attraction_mult = 0.10
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			always = yes
# 		}
# 		planet_amenities_add = 300
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
# 	}

# 	# triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
# 	#	potential = {
# 	#		exists = owner
# 	#		owner = { has_councilor = { COUNCILOR = "councilor_dimensional_worship_corporate" } }
# 	#	}
# 	#	planet_jobs_trade_produces_add = @councilor_dimensional_worship_priest_trade_value
# 	#	mult = value:scripted_modifier_councilor_level_mult|MODIFIER|trader_jobs_bonus_workforce_mult|TYPE|councilor_dimensional_worship_corporate|
# 	#}

# 	triggered_planet_modifier = {
# 		potential = {
# 			exists = owner														# Modded
# 			owner = { 
# 				OR = {
# 					has_valid_civic = civic_machine_cult						# Modded
# 					has_valid_civic = civic_machine_cult_machine				# Modded
# 				}
# 			}					
# 		}
# 		planet_jobs_engineering_research_produces_mult = 0.03					# Modded
# 		pop_bonus_workforce_mult = 0.02								# Modded
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			exists = owner														# Modded
# 			owner = { has_valid_civic = civic_spiritual_democracy }
# 		}
# 		planet_amenities_add = 200												# Modded
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			exists = owner														# Modded
# 			owner = { has_valid_civic = civic_shadow_council }					# Modded
# 		}
# 		planet_stability_add = 2												# Modded
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			exists = owner														# Modded
# 			owner = { has_valid_civic = civic_welfare_state }					# Modded
# 		}
# 		planet_amenities_add = 200												# Modded
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
# 	}

# 	weight = {
# 		weight = @ruler_job_weight
# 		mult = value:job_weights_modifier|JOB|high_priest|RESOURCE|unity|
# 		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
# 		modifier = {
# 			factor = 0.1
# 			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
# 		}
# 		# modifier = {
# 		#	factor = 5
# 		#	has_job_type = high_priest	# No Longer Used in Stellaris 4.0
# 		#}
# 		# Crisis purge
# 		modifier = {
# 			factor = 0.01
# 			exists = planet
# 			exists = planet.controller
# 			planet.controller = {
# 				OR = {
# 					is_country_type = swarm
# 					is_country_type = ai_empire
# 				}
# 			}
# 		}
# 		modifier = {
# 			factor = 25
# 			owner = { is_individual_machine = no }
# 		}
# 	}

# 	inline_script = "jobs/automodding_priority_unity"
# }

# noble = {		# Enriad - Marked for deletion for 4.0 politician rework
# 	category = ruler

# 	swappable_data = {
# 		default = {
# 			condition_string = RULER_JOB_TRIGGER
# 			building_icon = building_palace
# 			# clothes_texture_index = 1
# 		}
# 	}

# 	possible_pre_triggers = {
# 		has_owner = yes
# 		is_enslaved = no
# 		is_being_purged = no
# 		is_being_assimilated = no
# 		is_sapient = yes
# 	}

# 	possible_precalc = can_fill_ruler_job

# 	resources = {
# 		category = planet_nobles
# 		produces = {
# 			unity = 6
# 		}
# 		upkeep = {
# 			consumer_goods = 2
# 		}
# 		produces = {
# 			trigger = {
# 				exists = owner														# Modded
# 				owner = {
# 					OR = {
# 						has_valid_civic = civic_harmonious_hierarchy				# Modded
# 						has_valid_civic = civic_harmonious_hierarchy_corporate		# Modded
# 					}
# 				}
# 			}
# 			unity = 1																# Modded
# 		}
# 		produces = {
# 			trigger = {
# 				owner = { has_valid_civic = civic_byzantine_bureaucracy }			# Modded
# 			}
# 			unity = 1																# Modded
# 		}
# 		upkeep = {
# 			trigger = {
# 				owner = { has_valid_civic = civic_byzantine_bureaucracy }			# Modded
# 			}
# 			consumer_goods = -1														# Modded
# 		}
# 	}

# 	planet_modifier = {
# 		planet_stability_add = 2
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			always = yes
# 		}
# 		planet_amenities_add = 300
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			exists = owner														# Modded
# 			owner = {
# 				OR = {
# 					has_valid_civic = civic_harmonious_hierarchy				# Modded
# 					has_valid_civic = civic_harmonious_hierarchy_corporate		# Modded
# 				}
# 			}
# 		}
# 		planet_stability_add = 1												# Modded
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			exists = owner														# Modded
# 			owner = {
# 				OR = {
# 					has_valid_civic = civic_harmonious_hierarchy				# Modded
# 					has_valid_civic = civic_harmonious_hierarchy_corporate		# Modded
# 				}
# 			}
# 		}
# 		planet_amenities_add = 500												# Modded
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
# 	}

# 	triggered_country_modifier = {
# 		potential = {
# 			exists = owner														# Modded
# 			owner = {
# 				OR = {
# 					has_valid_civic = civic_harmonious_hierarchy				# Modded
# 					has_valid_civic = civic_harmonious_hierarchy_corporate		# Modded
# 				}
# 			}
# 		}
# 		empire_size_pops_mult = -0.001											# Modded
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			exists = owner														# Modded
# 			owner = { has_valid_civic = civic_shadow_council }					# Modded
# 		}
# 		planet_stability_add = 2												# Modded
# 	}

# 	triggered_planet_modifier = {
# 		potential = {
# 			exists = owner														# Modded
# 			owner = { has_valid_civic = civic_welfare_state }					# Modded
# 		}
# 		planet_amenities_add = 200
# 		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
# 	}

# 	weight = {
# 		weight = @ruler_job_weight
# 		mult = value:job_weights_modifier|JOB|noble|RESOURCE|unity|
# 		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
# 		modifier = {
# 			factor = 0.1
# 			NOR = { has_citizenship_rights = yes has_trait = trait_mechanical }
# 		}
# 		# modifier = {
# 		#	factor = 5
# 		#	has_job_type = noble		# No Longer Used in Stellaris 4.0
# 		#}
# 		# Crisis purge
# 		modifier = {
# 			factor = 0.01
# 			exists = planet
# 			exists = planet.controller
# 			planet.controller = {
# 				OR = {
# 					is_country_type = swarm
# 					is_country_type = ai_empire
# 				}
# 			}
# 			OR = { # Contingency won't purge itself
# 				NOT = { exists = event_target:custodian_bot }
# 				AND = {
# 					exists = event_target:custodian_bot
# 					NOT = { species = { is_same_value = event_target:custodian_bot } }
# 				}
# 			}
# 		}
# 	}

# 	inline_script = "jobs/automodding_priority_unity"
# }

# Enriad - Fake jobs for leader backgrounds as was in original game example
commandante = {
	category = ruler
	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_stronghold
			icon = enforcer
		}
	}
	possible = { always = no }

	# possible_pre_triggers = {
	# 	has_owner = yes
	# 	is_enslaved = no
	# 	is_being_purged = no
	# 	is_being_assimilated = no
	# 	is_sapient = yes
	# }

	# possible_precalc = can_fill_ruler_job

	# country_modifier = {
	# 	country_naval_cap_add = 3
	# }

	# resources = {
	# 	category = planet_bureaucrats
	# 	produces = {
	# 		trigger = {
	# 			exists = owner
	# 			owner = {  has_valid_civic = civic_citizen_service }
	# 		}
	# 		unity = 1
	# 	}
	# 	produces = {
	# 		trigger = {
	# 			exists = owner
	# 			owner = { has_valid_civic = civic_byzantine_bureaucracy }
	# 		}
	# 		unity = 1
	# 	}
	# 	upkeep = {
	# 		consumer_goods = 2
	# 	}
	# 	upkeep = {
	# 		trigger = {
	# 			exists = owner
	# 			owner = { has_valid_civic = civic_byzantine_bureaucracy }
	# 		}
	# 		consumer_goods = -1
	# 	}
	# }

	# planet_modifier = {
	# 	planet_orbital_bombardment_damage = -0.15
	# 	planet_stability_add = 3
	# 	planet_defense_armies_add = 2
	# }

	# triggered_planet_modifier = {
	# 	potential = {
	# 		always = yes
	# 	}
	# 	planet_amenities_add = 300
	# 	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	# }

	# # pop_group_modifier = {	# No Longer Used in Stellaris 4.0
	# #	pop_defense_armies_add = 2
	# #}

	# triggered_planet_modifier = {
	# 	potential = {
	# 		has_trait = trait_repugnant
	# 	}
	# 	planet_amenities_add = -100
	# 	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	# }

	# triggered_planet_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = {  has_valid_civic = civic_citizen_service }
	# 	}
	# 	planet_amenities_add = 300
	# 	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	# }

	# triggered_country_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = { has_valid_civic = civic_byzantine_bureaucracy }
	# 	}
	# 	modifier = {
	# 		empire_size_pops_mult = -0.005
	# 	}
	# }

	# weight = {
	# 	weight = @ruler_job_weight
	# 	mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	# 	modifier = {
	# 		factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	# 		has_trait = trait_repugnant
	# 	}
	# 	modifier = {
	# 		factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	# 		owner = { has_valid_civic = civic_citizen_service }
	# 	}
	# 	modifier = {
	# 		factor = 2.0
	# 		OR = {
	# 			has_trait = trait_very_strong
	# 		}
	# 	}
	# 	modifier = {
	# 		factor = 1.5
	# 		OR = {
	# 			has_trait = trait_strong
	# 		}
	# 	}
	# 	# modifier = {
	# 	#	factor = 5
	# 	#	has_job_type = commandante	# No Longer Used in Stellaris 4.0
	# 	#}
	# }

	# inline_script = "jobs/automodding_priority_unity"
}
# Offworld Pirate Captains
commandante_pirate_offworld = {
	category = ruler
	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_pirate_haven
			icon = enforcer
		}
	}
	# possible = { always = no }

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job

	country_modifier = {
		country_naval_cap_add = 2
	}

	resources = {
		category = planet_politicians
		produces = {
			unity = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {  has_valid_civic = civic_citizen_service }
			}
			unity = 1
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_byzantine_bureaucracy }
			}
			unity = 1
		}
		upkeep = {
			consumer_goods = 2
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_byzantine_bureaucracy }
			}
			consumer_goods = -1
		}
	}

	planet_modifier = {
		planet_orbital_bombardment_damage = -0.10
		planet_stability_add = 3
		planet_defense_armies_add = 1
		pop_government_ethic_attraction = -0.015
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	# pop_group_modifier = {	# No Longer Used in Stellaris 4.0
	#	pop_defense_armies_add = 1
	#}

	triggered_planet_modifier = {
		potential = {
			has_trait = trait_repugnant
		}
		planet_amenities_add = -100
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {  has_valid_civic = civic_citizen_service }
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_byzantine_bureaucracy }
		}
		modifier = {
			empire_size_pops_mult = -0.005
		}
	}

	weight = {
		weight = @ruler_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			has_trait = trait_repugnant
		}
		modifier = {
			factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			owner = { has_valid_civic = civic_citizen_service }
		}
		modifier = {
			factor = 2.0
			OR = {
				has_trait = trait_very_strong
			}
		}
		modifier = {
			factor = 1.5
			OR = {
				has_trait = trait_strong
			}
		}
		# modifier = {
		#	factor = 5
		#	has_job_type = commandante_pirate	# No Longer Used in Stellaris 4.0
		#}
	}

	inline_script = "jobs/automodding_priority_unity"
}

# Pirate Captains	#Cog Note - Necessary for Pirate_Haven_2 building
commandante_pirate = {
	category = ruler
	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_pirate_haven
			# clothes_texture_index = 1
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job

	country_modifier = {
		country_naval_cap_add = 2
	}

	resources = {
		category = planet_bureaucrats
		produces = {
			unity = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {  has_valid_civic = civic_citizen_service }
			}
			unity = 1
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_byzantine_bureaucracy }
			}
			unity = 1
		}
		upkeep = {
			consumer_goods = 2
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_byzantine_bureaucracy }
			}
			consumer_goods = -1
		}
	}

	planet_modifier = {
		planet_orbital_bombardment_damage = -0.10
		planet_stability_add = 3
		planet_defense_armies_add = 1
		pop_government_ethic_attraction = -0.015
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	# pop_group_modifier = {	# No Longer Used in Stellaris 4.0
	#	pop_defense_armies_add = 1
	#}

	triggered_planet_modifier = {
		potential = {
			has_trait = trait_repugnant
		}
		planet_amenities_add = -100
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {  has_valid_civic = civic_citizen_service }
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_byzantine_bureaucracy }
		}
		modifier = {
			empire_size_pops_mult = -0.005
		}
	}

	weight = {
		weight = @ruler_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			has_trait = trait_repugnant
		}
		modifier = {
			factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			owner = { has_valid_civic = civic_citizen_service }
		}
		modifier = {
			factor = 2.0
			OR = {
				has_trait = trait_very_strong
			}
		}
		modifier = {
			factor = 1.5
			OR = {
				has_trait = trait_strong
			}
		}
		# modifier = {
		#	factor = 5
		#	has_job_type = commandante_pirate	# No Longer Used in Stellaris 4.0
		#}
	}

	inline_script = "jobs/automodding_priority_unity"
}

#Thinker
supervisor = {
	category = ruler
	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_capital
			# clothes_texture_index = 1
		}
	}
	possible = { always = no }

	# possible_pre_triggers = {
	# 	has_owner = yes
	# 	is_enslaved = no
	# 	is_being_purged = no
	# 	is_being_assimilated = no
	# 	is_sapient = yes
	# }

	# possible_precalc = can_fill_ruler_job

	# resources = {
	# 	category = planet_bureaucrats
	# 	produces = {
	# 		unity = 7
	# 		society_research = 5 # 7 # 3.11
	# 	}
	# 	produces = {
	# 		trigger = {
	# 			exists = owner
	# 			owner = { has_valid_civic = civic_byzantine_bureaucracy }
	# 		}
	# 		unity = 1
	# 	}
	# 	upkeep = {
	# 		consumer_goods = 2
	# 	}
	# 	upkeep = {
	# 		trigger = {
	# 			exists = owner
	# 			owner = { has_valid_civic = civic_byzantine_bureaucracy }
	# 		}
	# 		consumer_goods = -1
	# 	}
	# }

	# triggered_planet_modifier = {
	# 	potential = {
	# 		always = yes
	# 	}
	# 	planet_amenities_add = 700
	# 	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	# }

	# triggered_planet_modifier = {
	# 	potential = {
	# 		has_trait = trait_repugnant
	# 	}
	# 	planet_amenities_add = -100
	# 	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	# }

	# triggered_planet_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = { OR = { has_valid_civic = civic_shadow_council } }
	# 	}
	# 	planet_stability_add = 2
	# }

	# triggered_country_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = { has_valid_civic = civic_byzantine_bureaucracy }
	# 	}
	# 	empire_size_pops_mult = -0.005
	# }

	# triggered_planet_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = { OR = { has_valid_civic = civic_welfare_state } }
	# 	}
	# 	planet_amenities_add = 200
	# 	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	# }

	# weight = {
	# 	weight = @ruler_job_weight
	# 	mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	# 	modifier = {
	# 		factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	# 		has_trait = trait_repugnant
	# 	}
	# 	modifier = {
	# 		factor = 2.0
	# 		OR = {
	# 			has_trait = trait_talented
	# 		}
	# 	}
	# 	modifier = {
	# 		factor = 1.5
	# 		OR = {
	# 			has_trait = trait_charismatic
	# 		}
	# 	}
	# 	# modifier = {
	# 	#	factor = 5
	# 	#	has_job_type = supervisor	# No Longer Used in Stellaris 4.0
	# 	#}
	# }

	# inline_script = "jobs/automodding_priority_unity"
}

#Mogul
mogul = {
	category = ruler
	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_galactic_stock_exchange
			# clothes_texture_index = 1
		}
	}
	possible = { always = no }

	# possible_pre_triggers = {
	# 	has_owner = yes
	# 	is_enslaved = no
	# 	is_being_purged = no
	# 	is_being_assimilated = no
	# 	is_sapient = yes
	# }

	# possible_precalc = can_fill_ruler_job

	# resources = {
	# 	category = planet_bureaucrats
	# 	produces = {
	# 		trigger = {
	# 			exists = owner
	# 			owner = { has_valid_civic = civic_byzantine_bureaucracy }
	# 		}
	# 		unity = 1
	# 	}
	# 	upkeep = {
	# 		consumer_goods = 2
	# 	}
	# 	upkeep = {
	# 		trigger = {
	# 			exists = owner
	# 			owner = { has_valid_civic = civic_byzantine_bureaucracy }
	# 		}
	# 		consumer_goods = -1
	# 	}
	# }

	# possible = {
	# 	exists = owner
	# 	owner = { NOT = { has_valid_civic = civic_distributism } }
	# }

	# # triggered_planet_modifier = {	# No Longer Used in Stellaris 4.0
	# #	potential = {
	# #		always = yes
	# #	}
	# #	planet_jobs_trade_produces_add = 5
	# #	# mult = value:scripted_modifier_mult|MODIFIER|trader_jobs_bonus_workforce_mult|
	# #}

	# triggered_planet_modifier = {
	# 	potential = {
	# 		always = yes
	# 	}
	# 	planet_amenities_add = 500
	# 	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	# }

	# triggered_planet_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = { has_valid_civic = civic_merchant_guilds }
	# 	}
	# 	modifier = {
	# 		planet_jobs_energy_produces_mult = 0.07
	# 	}
	# }

	# triggered_planet_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = { has_valid_civic = civic_state_monopoly }
	# 	}
	# 	modifier = {
	# 		planet_jobs_energy_produces_mult = 0.07
	# 		planet_jobs_minerals_produces_mult = 0.07
	# 	}
	# }

	# triggered_planet_modifier = {
	# 	potential = {
	# 		OR = {
	# 			has_trait = trait_thrifty
	# 			has_trait = trait_nuumismatic_administration
	# 		}
	# 	}
	# 	planet_amenities_add = 200
	# 	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	# }

	# triggered_planet_modifier = {
	# 	potential = {
	# 		has_trait = trait_repugnant
	# 	}
	# 	planet_amenities_add = -100
	# 	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	# }

	# triggered_planet_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = { OR = { has_valid_civic = civic_shadow_council } }
	# 	}
	# 	planet_stability_add = 2
	# }

	# triggered_country_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = { has_valid_civic = civic_byzantine_bureaucracy }
	# 	}
	# 	empire_size_pops_mult = -0.005
	# }

	# triggered_planet_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = { OR = { has_valid_civic = civic_welfare_state } }
	# 	}
	# 	planet_amenities_add = 200
	# 	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	# }

	# weight = {
	# 	weight = @ruler_job_weight
	# 	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	# 	mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	# 	modifier = {
	# 		factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	# 		OR = {
	# 			has_trait = trait_thrifty
	# 			has_trait = trait_nuumismatic_administration
	# 		}
	# 	}
	# 	modifier = {
	# 		factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	# 		has_trait = trait_repugnant
	# 	}
	# 	modifier = {
	# 		factor = 1.5
	# 		has_ethic = ethic_capitalism
	# 	}
	# 	modifier = {
	# 		factor = 1.5
	# 		OR = {
	# 			has_trait = trait_robot_domestic_protocols
	# 			has_trait = trait_charismatic
	# 		}
	# 	}
	# 	# modifier = {
	# 	#	factor = 5
	# 	#	has_job_type = mogul		# No Longer Used in Stellaris 4.0
	# 	#}
	# 	modifier = {
	# 		factor = 1.25
	# 		owner = { has_civic = civic_merchant_guilds }
	# 		has_trait = trait_brainslug
	# 	}
	# 	modifier = {
	# 		factor = 1.125
	# 		owner = { has_civic = civic_merchant_guilds }
	# 		has_trait = trait_presapient_natural_intellectuals
	# 	}
	# 	modifier = {
	# 		factor = 1.125
	# 		owner = { has_civic = civic_merchant_guilds }
	# 		has_trait = trait_robust
	# 	}
	# 	modifier = {
	# 		factor = 1.5
	# 		has_trait = trait_void_dweller_1
	# 		exists = planet
	# 		planet = { is_planet_class = pc_habitat }
	# 	}
	# 	modifier = {
	# 		factor = 0.85
	# 		has_trait = trait_void_dweller_1
	# 		exists = planet
	# 		planet = { is_artificial = no }
	# 	}
	# 	# Crisis purge
	# 	modifier = {
	# 		factor = 0.01
	# 		exists = planet
	# 		exists = planet.controller
	# 		planet.controller = {
	# 			OR = {
	# 				is_country_type = swarm
	# 				is_country_type = ai_empire
	# 			}
	# 		}
	# 		OR = { # Contingency won't purge itself
	# 			NOT = { exists = event_target:custodian_bot }
	# 			AND = {
	# 				exists = event_target:custodian_bot
	# 				NOT = { species = { is_same_value = event_target:custodian_bot } }
	# 			}
	# 		}
	# 	}
	# }

	# inline_script = "jobs/automodding_priority_trade"
}