###################
# Fancy Jobs
###################

politician = {
	category = ruler
	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_capital
			icon = politician
		}
		swap_type = {
			trigger = {
				politician_is_executive = yes
			}
			name = executive
			icon = executive
			desc = job_executive_desc
			weight = 5
		}
		swap_type = {
			trigger = {
				politician_is_science_director = yes
			}
			name = head_researcher
			icon = researcher
			desc = job_head_researcher_desc
			weight = 5
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
			}
			name = noble
			icon = noble
			desc = job_noble_desc
			weight = 10
		}
		swap_type = {	# Enriad - Elite Merchants are Moguls
			trigger = {
				politician_is_merchant = yes
			}
			name = mogul
			icon = mogul
			desc = job_mogul_desc
			weight = 10
		}
		swap_type = {
			trigger = {
				politician_is_high_priest = yes
			}
			name = high_priest
			icon = high_priest
			desc = job_high_priest_desc
			weight = 10
		}
		swap_type = {
			trigger = {
				politician_is_commandante = yes
			}
			name = commandante
			icon = commandante
			desc = job_commandante_desc
			weight = 10
		}
		swap_type = {
			trigger = {
				politician_is_commandante_pirate = yes
			}
			name = commandante_pirate
			icon = commandante_pirate
			desc = job_commandante_pirate_desc
			weight = 10
		}
		swap_type = {
			trigger = {
				politician_is_supervisor = yes
			}
			name = supervisor
			icon = supervisor
			desc = job_supervisor_desc
			weight = 10
		}
		swap_type = {
			trigger = {
				politician_is_high_techno_priest = yes
			}
			name = high_techno_priest
			icon = techno_priest
			desc = job_high_techno_priest_desc
			weight = 15
		}
		swap_type = {
			trigger = {
				politician_is_planetary_warden = yes
			}
			name = warden
			icon = enforcer
			desc = job_warden_desc
			weight = 15
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_science_director = yes
			}
			name = noble_researcher
			icon = noble
			desc = job_noble_researcher_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_high_priest = yes
			}
			name = sacred_noble
			icon = noble
			desc = job_sacred_noble_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_merchant = yes
			}
			name = noble_merchant
			icon = noble
			desc = job_noble_merchant_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_supervisor = yes
			}
			name = noble_supervisor
			icon = noble
			desc = job_noble_supervisor_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_commandante = yes
			}
			name = noble_commandante
			icon = noble
			desc = job_noble_commandante_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_commandante_pirate = yes
			}
			name = noble_commandante_pirate
			icon = noble
			desc = job_noble_commandante_pirate_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_augmentation_merchant = yes
			}
			name = augmentation_merchant
			icon = augmentor
			desc = job_augmentation_merchant_desc
			weight = 20
		}
		swap_type = {
			trigger = {
				politician_is_noble = yes
				politician_is_high_techno_priest = yes
			}
			name = high_noble_techno_priest
			icon = noble
			desc = job_noble_techno_priest_desc
			weight = 25
		}
		swap_type = {
			trigger = {
				politician_is_technophant = yes
			}
			name = technophant
			icon = technophant
			desc = job_technophant_desc
			weight = 30
		}
	}
	
	tags = { unity amenities }

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job

	resources = {
		category = planet_politicians
		produces = {
			unity = 6
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_gestalt = no }
			}
			consumer_goods = 2
		}
		##Executive
		produces = {
			trigger = {
				politician_is_executive = yes
			}
			trade = 4
		}
		##Mogul
		produces = {
			trigger = {
				exists = planet
				planet = {
					OR = {
						politician_is_merchant = yes
						politician_is_augmentation_merchant = yes
					}
				}
			}
			unity = -2
			trade = 6
		}
		##Science Director
		produces = {
			trigger = {
				exists = planet
				planet = {
					politician_is_science_director = yes
				}
			}
			unity = -2
			physics_research = 2
			society_research = 2
			engineering_research = 2
		}
		##High Priest
		produces = {
			trigger = {
				exists = planet
				planet = {
					politician_is_high_priest = yes
				}
			}
			unity = 2
		}
		##Commander
		produces = {
			trigger = {
				exists = planet
				planet = {
					OR = {
						politician_is_commandante = yes
						politician_is_commandante_pirate = yes
					}
				}
			}
			unity = -2
		}
		##Commander Pirate
		produces = {
			trigger = {
				exists = planet
				planet = {
					OR = {
						politician_is_commandante_pirate = yes
					}
				}
			}
			trade = 2
		}
		##Thinker
		produces = {
			trigger = {
				exists = planet
				planet = {
					politician_is_supervisor = yes
				}
			}
			unity = 1				# Enriad - to be balanced
			society_research = 5	# Enriad - to be balanced
		}
		##Technophant
		produces = {
			trigger = {
				exists = planet
				planet = {
					politician_is_technophant = yes
				}
			}
			engineering_research = 4
		}
		##Harmonious Hierarchy civic
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_harmonious_hierarchy
					has_valid_civic = civic_harmonious_hierarchy_corporate
				}
			}
			unity = 1
		}
		##Stratocratic Republic civic
		produces = {
			trigger = {
				exists = owner
				owner = {  has_valid_civic = civic_citizen_service }
			}
			unity = 1
		}
		##Theocratic Republic civic
		produces = {
			trigger = {
				exists = owner
				owner = {  has_valid_civic = civic_spiritual_democracy }
			}
			society_research = 3
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	#Noble
	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = {
				politician_is_noble = yes
			}
		}
		planet_stability_add = 2
	}
	#High Priest
	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = {
				politician_is_high_priest = yes
			}
			owner = { is_gestalt = no }
		}
 		pop_ethic_spiritualist_attraction_mult = 0.10
	}
	#Commander		# Enriad - All bonuses halved to match previous version numbers
	triggered_country_modifier = {
		potential = {
			exists = planet
			planet = {
				politician_is_commandante = yes
			}
		}
		country_naval_cap_add = 1.5
	}
	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = {
				politician_is_commandante = yes
			}
		}
		planet_orbital_bombardment_damage = -0.075
		planet_stability_add = 1.5
		planet_defense_armies_add = 1
	}
	#Pirate Commander
	triggered_country_modifier = {
		potential = {
			exists = planet
			planet = {
				politician_is_commandante_pirate = yes
			}
		}
		country_naval_cap_add = 2
		# planet_jobs_trade_produces_add = 2			# don't work in 4.0, changed to +2 trade
		pop_government_ethic_attraction = -0.015
	}
	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = {
				politician_is_commandante_pirate = yes
			}
		}
		planet_orbital_bombardment_damage = -0.1
		planet_stability_add = 3
		planet_defense_armies_add = 1
	}
	#Thinker		# Enriad - All bonuses halved to match previous version numbers
	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	#Mogul			# Enriad - All bonuses halved to match previous version numbers
	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 100
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_merchant_guilds }
		}
		modifier = {
			planet_jobs_energy_produces_mult = 0.035		# Enriad - can do gameplay, balance or performance issues
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_state_monopoly }
		}
		modifier = {
			planet_jobs_energy_produces_mult = 0.035		# Enriad - can do gameplay, balance or performance issues
			planet_jobs_minerals_produces_mult = 0.035		# Enriad - can do gameplay, balance or performance issues
		}
	}

	##Shadow Council
	triggered_planet_modifier = {
		potential = {
			exists = owner														# Modded
			owner = { OR = { has_valid_civic = civic_shadow_council } }			# Modded
		}
		planet_stability_add = 2												# Modded
	}

	##Welfare State
	triggered_planet_modifier = {
		potential = {
			exists = owner														# Modded
			owner = { OR = { has_valid_civic = civic_welfare_state } }			# Modded
		}
		planet_amenities_add = 200												# Modded
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
	}

	##Harmonious Hierarchy
	triggered_planet_modifier = {
	potential = {
		exists = owner															# Modded
		owner = {
			OR = {
				has_valid_civic = civic_harmonious_hierarchy					# Modded
				has_valid_civic = civic_harmonious_hierarchy_corporate			# Modded
			}
		}
	}
	planet_stability_add = 1													# Modded
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner														# Modded
			owner = {
				OR = {
					has_valid_civic = civic_harmonious_hierarchy				# Modded
					has_valid_civic = civic_harmonious_hierarchy_corporate		# Modded
				}
			}
		}
		planet_amenities_add = 500												# Modded
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
	}
	triggered_country_modifier = {
		potential = {
			exists = owner														# Modded
			owner = {
				OR = {
					has_valid_civic = civic_harmonious_hierarchy				# Modded
					has_valid_civic = civic_harmonious_hierarchy_corporate		# Modded
				}
			}
		}
		empire_size_pops_mult = -0.001											# Modded
	}

	##Machine Cult
	triggered_planet_modifier = {
		potential = {
			exists = owner														# Modded
			owner = { 
				OR = {
					has_valid_civic = civic_machine_cult						# Modded
					has_valid_civic = civic_machine_cult_machine				# Modded
				}
			}					
		}
		planet_jobs_engineering_research_produces_mult = 0.03					# Modded
		robotic_pop_cat_specialist_bonus_workforce_mult = 0.02					# Modded
		robotic_pop_cat_worker_bonus_workforce_mult = 0.02	 					# Modded
		robotic_pop_cat_civilian_bonus_workforce_mult = 0.02	 				# Modded
	}

	##Theocratic Republic
	triggered_planet_modifier = {
		potential = {
			exists = owner														# Modded
			owner = { has_valid_civic = civic_spiritual_democracy }
		}
		planet_amenities_add = 200												# Modded
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|	# Modded
	}
	
	inline_script = "output/politician_output_modifier"

	weight = {
		weight = @ruler_job_weight
		mult = value:job_weights_modifier|JOB|politician|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.1
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_unity"
	
	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = ruler
				AMOUNT = local_pop_amount
			}
		}
	}
}


# Enriad - Fake jobs for leader backgrounds as was in original game example
commandante = {
	category = ruler
	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_stronghold
			icon = commandante
		}
	}
	possible = { 
		always = no 
	}
}

# Offworld Pirate Captains
commandante_pirate_offworld = { #Steam: Marked for potential deletion. Would like to merge into politicians, not sure how we want to handle this since they're added by branch offices off-world
	category = ruler
	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_pirate_haven
			icon = enforcer
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job

	country_modifier = {
		country_naval_cap_add = 2
	}

	resources = {
		category = planet_politicians
		produces = {
			unity = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {  has_valid_civic = civic_citizen_service }
			}
			unity = 1
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_byzantine_bureaucracy }
			}
			unity = 1
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	planet_modifier = {
		planet_orbital_bombardment_damage = -0.10
		planet_stability_add = 3
		planet_defense_armies_add = 1
		pop_government_ethic_attraction = -0.015
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			has_trait = trait_repugnant
		}
		planet_amenities_add = -100
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {  has_valid_civic = civic_citizen_service }
		}
		planet_amenities_add = 300
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_byzantine_bureaucracy }
		}
		modifier = {
			empire_size_pops_mult = -0.005
		}
	}

	weight = {
		weight = @ruler_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			has_trait = trait_repugnant
		}
		modifier = {
			factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			owner = { has_valid_civic = civic_citizen_service }
		}
		modifier = {
			factor = 2.0
			OR = {
				has_trait = trait_very_strong
			}
		}
		modifier = {
			factor = 1.5
			OR = {
				has_trait = trait_strong
			}
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

# Pirate Captains
commandante_pirate = { 	#Keep for leader backgrounds
	category = ruler
	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_pirate_haven
		}
	}

	possible = {
		always = no
	}
}

#Thinker
supervisor = { 	#Keep for leader backgrounds
	category = ruler
	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_capital
		}
	}
	possible = { 
		always = no
	}
}

#Mogul
mogul = {	#Keep for leader backgrounds
	category = ruler
	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_galactic_stock_exchange
		}
	}
	possible = { 
		always = no
	}
}