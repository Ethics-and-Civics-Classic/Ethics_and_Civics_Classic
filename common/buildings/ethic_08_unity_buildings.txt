building_temple = {
	base_buildtime = @b1_time

	exempt_from_ai_planet_specialization = no

	category = unity

	building_sets = {
		unity
	}

	potential = {
		exists = owner
		NOT = { has_modifier = slave_colony }
		owner = {
			OR = {
				is_spiritualist = yes
				has_make_spiritualist_perk = yes
			}
		}
	}
	
	allow = {
	}

	destroy_trigger = {
		exists = owner
		OR = {
			has_modifier = slave_colony
			AND = {
				owner = { is_spiritualist = no }
				owner = { has_make_spiritualist_perk = no}
			}
		}
	}
	
	ai_weight_coefficient = 0

	convert_to = {
		building_bureaucratic_1
		building_hive_node
		building_uplink_node
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}

	planet_modifier = {
		# pop_ethic_spiritualist_attraction_mult = 0.05	# Added to priest job
	}

	inline_script = {
		script = jobs/priests_add			# Enriad - gives bureaucrats and their reskins in 4.0
		AMOUNT = @building_static_jobs
	}
	
	# triggered_planet_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = { 
	# 			has_civic = civic_defenders_faith 
	# 			is_megacorp = no
	# 		}
	# 	}
	# 	modifier = {
	# 		job_priests_add = -100		# Enriad - Priests are bureaucrats in 4.0
	# 		job_templar_add = 100		# Enriad - Templars are soldiers in 4.0
	# 	}
	# }
	# triggered_planet_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = { 
	# 			has_civic = civic_defenders_faith 
	# 			is_megacorp = yes
	# 		}
	# 	}
	# 	modifier = {
	# 		job_preacher_add = -100		# Enriad - Preachers are bureaucrats in 4.0
	# 		job_templar_add = 100		# Enriad - Templars are soldiers in 4.0
	# 	}
	# }
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				NOT = { has_valid_civic = civic_defenders_faith }
				NOT = { has_technology = tech_cultural_heritage }
				OR = {
					has_origin = origin_primitive_player_pre_industrial_age
					has_origin = origin_primitive_player_industrial_age
					has_origin = origin_primitive_player_machine_age
					has_origin = origin_primitive_player_atomic_age
					has_origin = origin_primitive_player_early_space_age
					AND = {
						OR = {
							has_country_flag = steam_age
							has_country_flag = machine_age
							has_country_flag = industrial_age
							has_country_flag = atomic_age
							has_country_flag = early_space_age
						}
						is_primitive = yes
					}
				}
			}
		}
		modifier = {
			job_bureaucrat_add = -100
			job_primitive_priest_2_add = 100
		}
	}
	
	# triggered_desc = {			# Enriad - Templars moved to be a reskin of Soldiers
	# 	trigger = {
	# 	exists = owner
	# 		owner = {
	# 			has_civic = civic_defenders_faith
	# 		}
	# 	}
	# 	text = job_templar_effect_desc
	# }

	#upgrades = {
	#	building_holotemple	#Now you build each building
	#}

	prerequisites = {
		"tech_cultural_heritage"
	}

	show_tech_unlock_if = {
		OR = {
			is_spiritualist = yes
			AND = {
				is_gestalt = no
				has_make_spiritualist_perk = yes
			}
		}
	}
}

building_holotemple = {
	base_buildtime = @b2_time
	planet_limit = 1
	category = unity

	building_sets = {
		unity
	}

	potential = {
		exists = owner
		NOT = { has_modifier = slave_colony }
		owner = {
			OR = {
				is_spiritualist = yes
				has_make_spiritualist_perk = yes
			}
		}
	}
	
	allow = {
		has_upgraded_capital = yes
	}

	destroy_trigger = {
		exists = owner
		OR = {
			has_modifier = slave_colony
			AND = {
				owner = { is_spiritualist = no }
				owner = { has_make_spiritualist_perk = no}
			}
		}
	}

	convert_to = {
		building_bureaucratic_2
		building_hive_cluster
		building_network_junction
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			rare_crystals = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			rare_crystals = @b2_rare_upkeep
		}
	}

	planet_modifier = {
		pop_ethic_spiritualist_attraction_mult = 0.10	# Cog Note - No jobs exist for this building, so this modifier is OK
		planet_bureaucrats_upkeep_mult = -0.20
	}
	
	#inline_script = {						# Enriad - marked for deletion
	#	script = jobs/priests_add			# Now holotemple is standalone and this is complimentary
	#	AMOUNT = @b2_jobs
	#}

	# triggered_planet_modifier = {			# Enriad - Holotemple is standalone and have no need to do that, marked for deletion
	# 	potential = {
	# 		exists = owner
	# 		owner = { has_civic = civic_defenders_faith }
	# 	}
	# 	modifier = {
	# 		job_bureaucrat_add = -200
	# 		job_templar_add = 200
	# 	}
	# }

	# triggered_desc = {					# Enriad - Templars moved to be a reskin of Soldiers, marked for deletion
	# 	trigger = {
	# 		exists = owner
	# 		owner = {
	# 			has_civic = civic_defenders_faith
	# 		}
	# 	}
	# 	text = job_templar_effect_desc
	# }

	#upgrades = {							# Enriad - marked for deletion
	#	building_sacred_nexus				# Now you build each building
	#}

	prerequisites = {
		"tech_holographic_rituals"
	}

	show_tech_unlock_if = {
		OR = {
			is_spiritualist = yes
			AND = {
				is_gestalt = no
				has_make_spiritualist_perk = yes
			}
		}
	}
}

building_sacred_nexus = {
	base_buildtime = @b3_time
	planet_limit = 1
	category = unity

	building_sets = {
		unity
	}

	potential = {
		exists = owner
		NOT = { has_modifier = slave_colony }
		owner = {
			OR = {
				is_spiritualist = yes
				has_make_spiritualist_perk = yes
			}
		}
	}

	allow = {
		has_major_upgraded_capital = yes
	}

	destroy_trigger = {
		exists = owner
		OR = {
			has_modifier = slave_colony
			AND = {
				owner = { is_spiritualist = no }
				owner = { has_make_spiritualist_perk = no}
			}
		}
	}

	convert_to = {
		building_bureaucratic_3
		building_hive_confluence
		building_system_conflux
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			rare_crystals = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			rare_crystals = @b3_rare_upkeep
		}
	}

	planet_modifier = {
		# pop_ethic_spiritualist_attraction_mult = 0.15	# Added to priest job
		pop_bureaucrat_bonus_workforce_mult = 0.15
	}

	#inline_script = {
	#	script = jobs/priests_add	#Now temple is standalone and this is complimentary
	#	AMOUNT = @b3_jobs
	#}

	# inline_script = buildings/job_high_priest_variants_add_saintly_hierarchy		# Enriad - original messed up code, fixed in next line

	triggered_planet_modifier = {
		potential = {
			exists = owner.federation
			owner = {
				NOT = { has_origin = origin_cybernetic_creed }
				federation = {
					has_federation_perk = all_the_priests_2
				}
			}
		}
		job_politician_add = 100
	}
	
	# triggered_planet_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = { has_civic = civic_defenders_faith }
	# 	}
	# 	modifier = {
	# 		job_bureaucrat_add = -300				# Enriad - Priests are bureaucrats in 4.0
	# 		job_templar_add = 300					# Enriad - Templars are soldiers in 4.0
	# 	}
	# }

	triggered_desc = {
		text = job_priest_effect_desc
	}
	
	# triggered_planet_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = {
	# 			OR = {
	# 				has_civic = civic_imperial_cult
	# 				has_civic = civic_divine_council
	# 				has_civic = civic_spiritual_democracy
	# 				has_civic = civic_exalted_priesthood
	# 			}
	# 		}
	# 	}
	# 	modifier = {
	# 		job_politician_add = 100		# Enriad - high_priest are politician in 4.0, moved to next inline_script
	# 	}
	# }

	inline_script = {
		script = "jobs/politician_add_EaC"
		AMOUNT = @building_static_jobs_low
		ADDITIONAL_TRIGGER = "exists = owner owner = { OR = { has_valid_civic = civic_imperial_cult		has_valid_civic = civic_divine_council		has_valid_civic = civic_spiritual_democracy		has_valid_civic = civic_exalted_priesthood	}	}"
	}
	
	# triggered_desc = {						# Enriad - Templars moved to be a reskin of Soldiers, marked for deletion
	# 	trigger = {
	# 		exists = owner
	# 		owner = {
	# 			has_civic = civic_defenders_faith
	# 		}
	# 	}
	# 	text = job_templar_effect_desc
	# }

	# triggered_desc = {
	# 	trigger = {
	# 		exists = owner
	# 		owner = {
	# 			OR = {
	# 				has_civic = civic_imperial_cult
	# 				has_civic = civic_divine_council
	# 				has_civic = civic_spiritual_democracy
	# 				has_civic = civic_exalted_priesthood
	# 			}
	# 		}
	# 	}
	# 	text = job_high_priest_effect_desc
	# }

	prerequisites = {
		"tech_consecration_fields"
	}

	show_tech_unlock_if = {
		OR = {
			is_spiritualist = yes
			AND = {
				is_gestalt = no
				has_make_spiritualist_perk = yes
			}
		}
	}
}

building_citadel_of_faith = {
	base_buildtime = @b2_time
	#empire_limit = {	Steam: Why is this tagged? I'll leave it be for now but why change it to one per planet?
		#base = 1
	#}
	planet_limit = 1

	category = unity

	building_sets = {
		unity
	}

	potential = {
		exists = owner
		NOT = { has_modifier = slave_colony }
		NOT = { has_modifier = penal_colony }
		owner = {
			OR = {
				is_spiritualist = yes
				has_make_spiritualist_perk = yes
			}
		}
	}

	allow = {
		has_major_upgraded_capital = yes
	}

	destroy_trigger = {
		exists = owner
		OR = {
			has_modifier = slave_colony
			has_modifier = penal_colony
			AND = {
				owner = { is_spiritualist = no }
				owner = { has_make_spiritualist_perk = no}
			}
		}
	}

	convert_to = {
		building_autocurating_vault
		building_alpha_hub
		building_corporate_vault
		building_trophy_vault
	}

	resources = {
		category = planet_buildings
		cost = {
			trigger = {
				has_ringworld_output_boost = no
			}
			minerals = @b2_minerals
			rare_crystals = @b2_rare_cost
		}
		cost = {
			trigger = {
				has_ringworld_output_boost = yes
			}
			minerals = 1200
			rare_crystals = 375
		}
		upkeep = {
			trigger = {
				has_ringworld_output_boost = no
			}
			energy = @b2_upkeep
			rare_crystals = @b2_rare_upkeep
		}
		upkeep = {
			trigger = {
				has_ringworld_output_boost = yes
			}
			energy = 8
			rare_crystals = 3
		}
	}
	
	planet_modifier = {
		planet_bureaucrats_unity_produces_add = 3
	}

	triggered_planet_modifier = {
		potential = {
			has_ringworld_output_boost = yes
		}
		planet_bureaucrats_unity_produces_add = 1
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = no
			}
		}
		planet_bureaucrats_consumer_goods_upkeep_add = 3
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_machine_empire = yes
			}
		}
		planet_bureaucrats_energy_upkeep_add = 6
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_hive_empire = yes
				is_lithoid_empire = no
			}
		}
		planet_bureaucrats_food_upkeep_add = 3
		planet_bureaucrats_energy_upkeep_add = 3
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_hive_empire = yes
				is_lithoid_empire = yes
			}
		}
		planet_bureaucrats_minerals_upkeep_add = 3
		planet_bureaucrats_energy_upkeep_add = 3
	}
	
	# Add bonus High Priest OR Tech Hierophant Jobs
	# triggered_planet_modifier = {
	# 	potential = {
	# 		exists = owner
	# 		owner = {
	# 			NOT = { has_origin = origin_cybernetic_creed }
	# 		}
	# 	}
	# 	job_politician_add = 200			# Enriad - high_priest are politician in 4.0, moved to next inline_script
	# }

	inline_script = {
		script = "jobs/politician_add_EaC"
		AMOUNT = @building_static_jobs
		ADDITIONAL_TRIGGER = "exists = owner	owner = { NOT = { has_origin = origin_cybernetic_creed } }"
	}
	triggered_planet_modifier = {			# Enriad - EaC addition for spiritualist civics 
		potential = {
			exists = owner
			owner = {
				OR = {
					has_civic = civic_imperial_cult
					has_civic = civic_divine_council
					has_civic = civic_spiritual_democracy
					has_civic = civic_exalted_priesthood
				}
			}
		}
		modifier = {
			job_politician_add = 100		# Enriad - in one building should be only one inline_script
		}
	}
	
	# triggered_desc = {					# Enriad - Marked for deletion, moved to inline_scripts "jobs/politician_add" and "jobs/politician_add_EaC"
	# 	trigger = {
	# 		exists = owner
	# 		owner = {
	# 			NOT = { has_origin = origin_cybernetic_creed }
	# 		}
	# 	}
	# 	text = job_high_priest_effect_desc
	# }
	# triggered_planet_modifier = {			# Enriad - high_priest are politician in 4.0, moved to inline_script
	# 	potential = {
	# 		exists = owner
	# 		owner = {
	# 			has_origin = origin_cybernetic_creed
	# 		}
	# 	}
	# 	job_technophant_add = 200
	# }
	# triggered_desc = {					# Enriad - Marked for deletion, moved to inline_scripts "jobs/politician_add" and "jobs/politician_add_EaC"
	# 	trigger = {
	# 		exists = owner
	# 		owner = {
	# 			has_origin = origin_cybernetic_creed
	# 		}
	# 	}
	# 	text = job_technophant_effect_desc
	# }

	# triggered_planet_modifier = {			# Enriad - Templars moved to be a reskin of Soldiers, marked for deletion
	# 	potential = {
	# 		exists = owner
	# 		owner = { has_civic = civic_defenders_faith }
	# 	}
	# 	modifier = {
	# 		job_bureaucrat_add = -200
	# 		job_templar_add = 200
	# 		# pop_ethic_spiritualist_attraction_mult = 0.20	# Added to priest job
	# 	}
	# }

	# triggered_planet_modifier = {			# Enriad - disabled bc transcend is civilian now
	# 	potential = {
	# 		exists = owner
	# 		owner = { has_civic = civic_spiritual_seekers }
	# 	}
	# 	modifier = {
	# 		job_transcend_add = 100
	# 	}
	# }

	#country_modifier = {
	#	country_official_cap_add = 1 #No limit in 4.0 makes it kinda OP - Szatan2000
	#}

	# triggered_desc = {		# Enriad - Marked for deletion, moved to inline_scripts "jobs/politician_add" and "jobs/politician_add_EaC"
	# 	trigger = {
	# 		exists = owner
	# 		owner = {
	# 			OR = {
	# 				has_civic = civic_imperial_cult
	# 				has_civic = civic_divine_council
	# 				has_civic = civic_spiritual_democracy
	# 				has_civic = civic_exalted_priesthood
	# 			}
	# 		}
	# 	}
	# 	text = job_high_priest_effect_desc
	# }

	# triggered_desc = {			# Enriad - disabled bc transcend is civilian now
	# 	trigger = {
	# 		exists = owner
	# 		owner = {
	# 			has_civic = civic_spiritual_seekers
	# 		}
	# 	}
	# 	text = job_transcend_effect_desc
	# }

	# triggered_desc = {						# Enriad - Templars moved to be a reskin of Soldiers, marked for deletion
	# 	trigger = {
	# 		exists = owner
	# 		owner = {
	# 			has_civic = civic_defenders_faith
	# 		}
	# 	}
	# 	text = job_templar_effect_desc
	# }
	
	prerequisites = {
		"tech_transcendent_faith"
	}

	triggered_desc = {
		text = job_priest_effect_desc
	}
}

# Servitors
building_organic_sanctuary = {
	base_buildtime = @b1_time

	category = unity

	building_sets = {
		bio_trophy
		urban
		unity
	}

	potential = {
		exists = owner
		owner = {
			OR = {
				has_valid_civic = civic_machine_servitor
				has_valid_civic = civic_machine_cult_machine
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOR = { 
					owner = { has_valid_civic = civic_machine_servitor }
					owner = { has_valid_civic = civic_machine_cult_machine }
				}
			}
			AND = {
				owner = { is_ai = yes }
				count_owned_pop_amount = {
					limit = {
						has_citizenship_type = {
							type = citizenship_organic_trophy
							country = owner
						}
					}
					count <= 2000
				}
				num_buildings = { type = building_organic_sanctuary value > 3 }
			}
			AND = {
				owner = { is_ai = yes }
				count_owned_pop_amount = {
					limit = {
						has_citizenship_type = {
							type = citizenship_organic_trophy
							country = owner
						}
					}
					count <= 4000
				}
				num_buildings = { type = building_organic_paradise value > 5 }
			}
		}
	}

	convert_to = {
		building_luxury_residence
		building_communal_housing
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}

	planet_modifier = {
		job_bio_trophy_add = 1500
	}

	upgrades = {
		"building_organic_paradise"
	}

	# We need to cheat here and tell AI that this will probably give some complex output since AI can not evaluate what this building does without the pops which it cant get without the building - chicken and egg
	ai_resource_production = {
		unity = 10
		physics_research = 10
		alloys = 5

		trigger = {
			NOT = { has_building = building_organic_sanctuary }
		}
	}

	ai_weight_coefficient = 1.2

	# Here we try to adress the second issue that the AI cant evaluate the pop job output of the bio trophy given the happiness trigger that was put inplace to guard against players exploiting bio trophies

	#science
	ai_resource_production = {
		unity = 10
		physics_research = 10

		trigger = {
			any_owned_pop_group = {
				is_pop_category = bio_trophy_unemployment
			}

			planet_resource_compare = {
				resource = physics_research
				value >= 100
				type = produces
			}
		}
	}

	#alloys
	ai_resource_production = {
		unity = 10
		alloys = 10

		trigger = {
			any_owned_pop_group = {
				is_pop_category = bio_trophy_unemployment
			}

			planet_resource_compare = {
				resource = alloys
				value >= 100
				type = produces
			}
		}
	}

	#cgs
	ai_resource_production = {
		unity = 10
		consumer_goods = 10

		trigger = {
			any_owned_pop_group = {
				is_pop_category = bio_trophy_unemployment
			}

			planet_resource_compare = {
				resource = consumer_goods
				value >= 100
				type = produces
			}
		}
	}
}

building_organic_paradise = {
	base_buildtime = @b2_time
	can_build = no
	icon = building_paradise_dome

	category = unity

	building_sets = {
		bio_trophy
		urban
		unity
	}

	potential = {
		exists = owner
		owner = {
			OR = {
				has_valid_civic = civic_machine_servitor
				has_valid_civic = civic_machine_cult_machine
			}
		}
	}

	destroy_trigger = {
		exists = owner
		NOR = { 
			owner = { has_valid_civic = civic_machine_servitor } 
			owner = { has_valid_civic = civic_machine_cult_machine } 
		}
	}

	convert_to = {
		building_paradise_dome
		building_communal_housing_large
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
	}

	planet_modifier = {
		job_bio_trophy_add = 3000
	}

	prerequisites = { "tech_paradise_dome" }

	show_tech_unlock_if = {
		owner = { 
			OR = {
				has_valid_civic = civic_machine_servitor 
				has_valid_civic = civic_machine_cult_machine
			}
		}
	}

	ai_weight_coefficient = 1.2

	# Here we try to adress the second issue that the AI cant evaluate the pop job output of the bio trophy given the happiness trigger that was put inplace to guard against players exploiting bio trophies

	#science
	ai_resource_production = {
		unity = 20
		physics_research = 20

		trigger = {
			any_owned_pop_group = {
				is_pop_category = bio_trophy_unemployment
			}

			planet_resource_compare = {
				resource = physics_research
				value >= 100
				type = produces
			}
		}
	}

	#alloys
	ai_resource_production = {
		unity = 20
		alloys = 20

		trigger = {
			any_owned_pop_group = {
				is_pop_category = bio_trophy_unemployment
			}

			planet_resource_compare = {
				resource = alloys
				value >= 100
				type = produces
			}
		}
	}

	#cgs
	ai_resource_production = {
		unity = 20
		consumer_goods = 20

		trigger = {
			any_owned_pop_group = {
				is_pop_category = bio_trophy_unemployment
			}

			planet_resource_compare = {
				resource = consumer_goods
				value >= 100
				type = produces
			}
		}
	}
}
