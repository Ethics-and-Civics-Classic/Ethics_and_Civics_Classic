# Triggers when the game starts
on_game_start = {
	events = {
		starter_tech.1
		ethic_civic_classic_flag.1
		ethic_civic_classic_flag.2 #Both effectively do the same thing. Unsure why both need to exist
	}
}

on_game_start_country = {
	events = {
		ethic_civic_classic_flag.3 #Sets situation for PrimPlayers
	}
}

######################################
# Liberate Slaves Bombardment Stance #
######################################

# Pop is abducted by raiding stance
# This = Pop scope
# From = planet abducted from
on_pop_abducted = {
	events = {
		EaC_civic_mechanic_events.4121
		EaC_civic_mechanic_events.4122
	}
}

##########################################
# Underground Railroad & General Strikes #
##########################################

# Fires for each planet every year (counting up from colonisation date, includes home planet)
on_colony_yearly_pulse = {
	random_events = {
		25 = EaC_civic_mechanic_events.30401 # General Strikes Appear (High Crime)
		25 = EaC_civic_mechanic_events.30402 # Underground Railroad (High Crime)
		25 = EaC_civic_mechanic_events.30411 # Criminal Underworld Disappears (Low Crime) OR (Low Ideology)	- Labor Movements
		25 = EaC_civic_mechanic_events.30412 # Criminal Underworld Disappears (Low Crime) OR (Low Ideology) - 	Underground Railroad
	}
}

# No scope, like on_game_start
on_yearly_pulse = {
	events = {
		EaC_civic_mechanic_events.3050		# Underground Railroad & General Strikes Events
	}
}

############################
# Pirate Mercenary Enclave #
############################

#Executed when an empire wishes to turn a mercenary fleet into a Mercenary enclave
#This = fleet
on_establish_mercenary_enclave = {
	events = {
		
	}
}

# No scope, like on_game_start
on_monthly_pulse = {
	events = {
		EaC_civic_mechanic_events.2055 			# If Khan dead, merc fleets break contract
		EaC_civic_mechanic_events.2065 			# Unemployed mercs return to merc station
	}
}

# No scope, like on_game_start
on_bi_yearly_pulse = {
	events = {
		EaC_civic_mechanic_events.2045 #Khan hires mercenaries
	}
}

# this = country
on_monthly_pulse_country = {
	events = {
		EaC_civic_mechanic_events.2075		# Find admiralless merc fleets and give them one.
	}
}

# Triggers when trying to open the diplomacy view for countries with custom diplomacy.
# Country scope
# This = target country (player)
# From = source country
on_custom_diplomacy = {
	events = {
		EaC_civic_mechanic_events.200 # Mercenary Enclave
	}
}

# This = owner of fleet 1
# From = owner of fleet 2
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_entering_battle = {
	events = {
		EaC_civic_mechanic_events.27
	}
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		EaC_civic_mechanic_events.23		# destroy Mercenary Enclave
	}
}

# This = fleet
# From = country that borrowed the fleet
# FromFrom = country that owns the fleet
# Is fired immediately after fleet is leased out
on_fleet_contract_started = {
	events = {
		EaC_civic_mechanic_events.2085 #Lock Admiral Into Merc Fleet
	}
}

# This = fleet
# From = country that borrowed the fleet
# FromFrom = country that owns the fleet
# FromFromFrom = country that initiated the ending (the same as owner in a case of expiration)
# Is fired immediately after fleet contract is expired
on_fleet_contract_expired = {
	events = {
		EaC_civic_mechanic_events.2058 # Delay before AIs can hire the fleet again
		EaC_civic_mechanic_events.2059 # Merc fleet contract expired. Renew?
		EaC_civic_mechanic_events.2080 #Take your admiral back, AI enclave!
	}
}

# This = fleet
# From = country that borrowed the fleet
# FromFrom = country that owns the fleet
# FromFromFrom = country that initiated the ending (trade deal actor when the contract cancellation is a part of trade deal)
# Is fired immediately after fleet contract is cancelled (when controller prematurely finishes the contract or when the contract cancellation is a part of trade deal)
on_fleet_contract_cancelled = {
	events = {
		EaC_civic_mechanic_events.2058 # Delay before AIs can hire the fleet again
		EaC_civic_mechanic_events.2080 #Take your admiral back, AI enclave!
	}
}

# This = fleet
# From = country that borrowed the fleet
# FromFrom = country that owns the fleet
# FromFromFrom = country that initiated the ending (main attacker in a case of war)
# Is fired immediately after fleet contract is broken (when country is attacked by someone of when a war is started)
on_fleet_contract_broken = {
	events = {
		EaC_civic_mechanic_events.2058 # Delay before AIs can hire the fleet again
		EaC_civic_mechanic_events.2080 #Take your admiral back, AI enclave!
	}
}

##############
#  Election  #
##############

# Called when an election starts
# scope: country
on_election_started = {
	events = {
		#paragon.500 # Flags Leaders that are on the Council. #Modder Note, this is giving us an idea of when the vanilla scope happens
		EaC_civic_mechanic_events.100
	}
}

# Called when an election ends
# scope: country
on_election_ended = {
	events = {
		#paragon.501 # Clean up Flags about being on Council at Election start. #Modder Note, this is giving us an idea of when the vanilla scope happens
		#Modder Note, Election background settings are made after paragon.501
		EaC_civic_mechanic_events.103
	}
}

# Executed when a new heir is appointed
# This = Heir
on_new_heir = {
	events = {
		#leader.200		# New Heir appointed, grant traits and select class. #Modder Note, this is giving us an idea of when the vanilla scope happens
	}
}

# Executed when an heir is promoted to ruler
# This = Heir
on_heir_promoted_to_ruler = {
	events = {
		EaC_civic_mechanic_events.102
	}
}

# Executed as a leader has died
# This = Country
# From = Leader
on_leader_death = {
	events = {
		#Modder Note, this is giving us an idea of when the vanilla scope happens
		#pretender.1
		#akx.9330
		#marauder.70
		#marauder.711
		#paragon.590			# Randomize if leader retires or dies by default
		#paragon.3904
		#paragon.2
		#paragon.5900
		#paragon.3906
		#distar.168			# Remove Event Node Traits
		#paragon.600			# Generate new nodes for a gestalt empire if a node dies.
		#astral_rift.695		# Death of the Tower Rift Scientist Leader
		#astral_planes.3119	# Formless Leader death
		#cyber.1521 			# RulerChip adding variables event
		#synth.1555          # Synth Imperial physical swap
		#cybernetics.5095	# No exploiting Tactical Algorithms
		
		EaC_civic_mechanic_events.101 #Allows imperial authority's ruler to pass skill level to the heir
	}
}

# Executed as a leader has been fired
# This = Country
# From = Leader
on_leader_fired = {
	events = {
		#Modder Note, this is giving us an idea of when the vanilla scope happens
		#marauder.70
		#paragon.3904
		#paragon.2
		#paragon.290
		#paragon.3906
		#distar.168 # Remove Event Node Traits
		
		EaC_civic_mechanic_events.101 #Allows imperial authority's ruler to pass skill level to the heir
	}
}

on_uplift_completion = {
	events = {
		unity_patrons.1
	}
}

on_blocker_cleared = {
	events = {
		# ethic_rebuild_clear_blocker.1
	}
}

on_pop_purged = {
	events = {
		slave_race.1
	}
}



# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_perp = {
	events = {
		#glorious_fleet.0
	}
}

# This = owner of fleet 1 (destroyed)
# From = owner of fleet 2 (combatant)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_victim = {
	events = {
        #glorious_fleet.1
	}
}

# Scope = planet_event
# This = planet scope
# From = uplifted species (pre-modification)
on_uplift_completion = {
	events = {
		unity_patrons.1
	}
}

#on_building_demolished = {
#	events = {
#		# get 30 minerals back
#		ethic_rebuild_minerals_back.1
#	}
#}


#on_purge_complete = {
#	events = {
#		purity_chosen.1
#	}
#}




#on_the_start_button_press = {
#	events = {
#		starter_event.1
#
#	}
#}


#on_daily_bombardment = {
#	events = {
#		pds_active.1
#	}
#}
