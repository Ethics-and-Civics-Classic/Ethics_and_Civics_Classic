#######################################
# Pop Faction Events
# By Maximilian Olbers & Gemma Thomson
#######################################

@RecentFactionsEventTimer = 500 # Days until this empire should be eligible for most other 'Faction Reacts' events
@RecentCommsTimer = 3600 # 10 years, during which parties are considered to have established communications recently

namespace = factions

# A faction is formed
pop_faction_event = {
	id = factions.1
	title = factions.1.title
	desc = {
		trigger = {
			text = factions.1.desc.start
			text = newline

			 success_text = {
				text = factions.1.desc.bankers
				is_pop_faction_type = bankers
			}
			success_text = {
				text = factions.1.desc.socialists
				is_pop_faction_type = socialists
			}
			 success_text = {
			 	text = factions.1.desc.environmentalists
			 	is_pop_faction_type = environmentalists
			 }
			 success_text = {
			 	text = factions.1.desc.manufacturers
			 	is_pop_faction_type = manufacturers
			 }
			success_text = {
				text = factions.1.desc.imperialist
				is_pop_faction_type = imperialist
			}
			success_text = {
				text = factions.1.desc.isolationist
				is_pop_faction_type = isolationist
			}
			success_text = {
				text = factions.1.desc.progressive
				is_pop_faction_type = progressive
			}
			success_text = {
				text = factions.1.desc.prosperity
				is_pop_faction_type = prosperity
			}
			success_text = {
				text = factions.1.desc.supremacist
				is_pop_faction_type = supremacist
			}
			success_text = {
				text = factions.1.desc.technologist
				is_pop_faction_type = technologist
			}
			success_text = {
				text = factions.1.desc.totalitarian
				is_pop_faction_type = totalitarian
			}
			success_text = {
				text = factions.1.desc.traditionalist
				is_pop_faction_type = traditionalist
			}
			success_text = {
				text = factions.1.desc.xenoist
				is_pop_faction_type = xenoist
			}
			success_text = {
				hidden:owner = { NOT = { has_country_flag = first_faction } }
				text = factions.1.desc.firstfinisher
			}
		}
	}
	picture = GFX_evt_galactic_senate
	show_sound = event_factions
	is_triggered_only = yes

	trigger = {
		NOT = {
			owner = {
				has_origin = origin_broken_shackles
				# has_country_flag = first_faction 
			}
		}
	}

	option = {
		name = OK
		hidden_effect = {
			owner = {
				every_owned_planet = {
					every_owned_pop_group = {
						force_faction_evaluation = yes
					}
				}
				set_country_flag = first_faction
			}
		}
	}
}

# Killed Guardian
country_event = {
	id = factions.10
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = default
		from = {
			is_guardian_country = yes
		}
	}

	immediate = {
		set_country_flag = killed_guardian
	}
}

# Established comms
# Via on_post_communications_established | this = country which established the communications; from = country communications were established with
country_event = {
	id = factions.11
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_country_type = default
			is_country_type = fallen_empire
			is_country_type = awakened_fallen_empire
			AND = {
				is_primitive = yes
				current_awareness_level = full
			}
		}
		from = {
			is_country_type = default
		}
	}

	immediate = {
		set_timed_country_flag = {
			flag = recent_comms_timed
			days = @RecentCommsTimer
		}
		from = {
			set_timed_country_flag = {
				flag = recent_comms_timed
				days = @RecentCommsTimer
			}
		}
	}
}

# Invaded primitives
country_event = {
	id = factions.12
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = { is_primitive = yes }
		is_country_type = default
	}

	immediate = {
		set_timed_country_flag = {
			flag = recent_primitive_invasion
			years = 20 # 20 years
		}
	}
}

# Beginning war as either attacker or defender
country_event = {
	id = factions.13
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		from = {
			if = {
				limit = { is_war_participant = { who = root side = attackers } }
				root = {
					set_timed_country_flag = {
						flag = entered_war_as_attacker
						years = 20 # 20 years
					}
				}
			}
			else_if = {
				limit = { is_war_participant = { who = root side = defenders } }
				root = {
					set_timed_country_flag = {
						flag = entered_war_as_defender
						years = 20 # 20 years
					}
				}
			}
		}
	}
}

# Imperialist frontier outpost demand
# ship_event = {
#	id = factions.220
#	hide_window = yes
#	is_triggered_only = yes
#
#	immediate = {
#		owner = {
#			set_timed_country_flag = {
#				flag = imperialist_frontier_outpost_timed_flag
#				days = 7200 # 20 years
#			}
#		}
#	}
#}

# Industrialist Recent Monster Extermination
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# fromfrom = fleet 1
# fromfromfrom = fleet 2
# country_event = {
#	id = factions.330
#	hide_window = yes
#	is_triggered_only = yes

#	trigger = {
#		is_country_type = default
#		from = {
#			OR = {
#				is_country_type = crystal
#				is_country_type = drone
#				is_amoeba_country_type = yes
#				is_country_type = cloud
#				is_country_type = pirate
#				is_country_type = crystal_faction
#				is_country_type = drone_faction
#			}
#		}
#		fromfrom.solar_system = {
#			has_star_flag = hostile_system

#			count_fleet_in_system = {
#				count < 1
#				limit = {
#					exists = owner
#					owner = {
#						OR = {
#							is_country_type = crystal
#							is_country_type = drone
#							is_amoeba_country_type = yes
#							is_country_type = cloud
#							is_country_type = pirate
#							is_country_type = crystal_faction
#							is_country_type = drone_faction
#						}
#					}
#				}
#			}
#		}
#	}

#	immediate = {
#		set_timed_country_flag = {
#			flag = recent_monster_extermination_timed
#			days = 3600 # 10 years
#		}
#	}
# }

# Xenoist 1000

# Xenoist Uplift Demand
# Via on_uplift_completion = {}
planet_event = {
	id = factions.1005
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = recent_uplift_timed
				years = 20 # 20 years
			}
		}
	}
}

# Notification event - other empire shifts ethics
country_event = {
	id = factions.2000
	title = factions.2000.title
	location = event_target:TargetFaction.Owner.capital_scope
	desc = {
		trigger = {
			text = factions.2000.desc.start
			text = newline

			 success_text = {
				text = factions.2000.desc.bankers
				event_target:TargetFaction = { is_pop_faction_type = bankers }
			}
			success_text = {
				text = factions.2000.desc.socialists
				event_target:TargetFaction = { is_pop_faction_type = socialists }
			}
			 success_text = {
			 	text = factions.2000.desc.environmentalists
			 	event_target:TargetFaction = { is_pop_faction_type = environmentalists }
			 }
			 success_text = {
			 	text = factions.2000.desc.manufacturers
			 	event_target:TargetFaction = { is_pop_faction_type = manufacturers }
			 }
			success_text = {
				text = factions.2000.desc.imperialist
				event_target:TargetFaction = { is_pop_faction_type = imperialist }
			}
			success_text = {
				text = factions.2000.desc.isolationist
				event_target:TargetFaction = { is_pop_faction_type = isolationist }
			}
			success_text = {
				text = factions.2000.desc.progressive
				event_target:TargetFaction = { is_pop_faction_type = progressive }
			}
			success_text = {
				text = factions.2000.desc.prosperity
				event_target:TargetFaction = { is_pop_faction_type = prosperity }
			}
			success_text = {
				text = factions.2000.desc.supremacist
				event_target:TargetFaction = { is_pop_faction_type = supremacist }
			}
			success_text = {
				text = factions.2000.desc.technologist
				event_target:TargetFaction = { is_pop_faction_type = technologist }
			}
			success_text = {
				text = factions.2000.desc.totalitarian
				event_target:TargetFaction = { is_pop_faction_type = totalitarian }
			}
			success_text = {
				text = factions.2000.desc.traditionalist
				event_target:TargetFaction = { is_pop_faction_type = traditionalist }
			}
			success_text = {
				text = factions.2000.desc.xenoist
				event_target:TargetFaction = { is_pop_faction_type = xenoist }
			}
		}
	}

	picture = GFX_evt_alien_propaganda
	show_sound = event_factions

	is_triggered_only = yes

	option = {
		name = OK
	}
}
